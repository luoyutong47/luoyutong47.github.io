<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>初学css实战 隐藏式伸缩菜单</title>
    <link href="/2022/10/08/%E9%9A%90%E8%97%8F%E5%BC%8F%E4%BC%B8%E7%BC%A9%E8%8F%9C%E5%8D%95/"/>
    <url>/2022/10/08/%E9%9A%90%E8%97%8F%E5%BC%8F%E4%BC%B8%E7%BC%A9%E8%8F%9C%E5%8D%95/</url>
    
    <content type="html"><![CDATA[<h1 id="效果展示"><a class="markdownIt-Anchor" href="#效果展示"></a> 效果展示</h1><p><img src="/img/%E4%BC%B8%E7%BC%A9%E8%8F%9C%E5%8D%95.gif" alt="效果" /></p><h1 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h1><h2 id="html-部分"><a class="markdownIt-Anchor" href="#html-部分"></a> HTML 部分</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><code class="hljs HTML"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>伸缩式菜单<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://cdn.staticfile.org/font-awesome/4.7.0/css/font-awesome.css&quot;</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;1.css&quot;</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span> &gt;</span><br><br><br><br>        <span class="hljs-comment">&lt;!-- --h为自定义变量，这里设置方便定义各个列表项样式top属性 --&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;--h:0%;&quot;</span>&gt;</span><br><br>            <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span><br><br>                <span class="hljs-comment">&lt;!--设置为#号是因为此例中无跳转链接--&gt;</span><br><br>                <span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;fa fa-user-circle-o&quot;</span> <span class="hljs-attr">aria-hidden</span>=<span class="hljs-string">&quot;true&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span>  <span class="hljs-comment">&lt;!--图标--&gt;</span><br><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;--h:20%;&quot;</span>&gt;</span><br><br>            <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span><br><br>                <span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;fa fa-envelope-open-o&quot;</span> <span class="hljs-attr">aria-hidden</span>=<span class="hljs-string">&quot;true&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span><br><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;--h:40%;&quot;</span>&gt;</span><br><br>            <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span><br><br>                <span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;fa fa-folder&quot;</span> <span class="hljs-attr">aria-hidden</span>=<span class="hljs-string">&quot;true&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span><br><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;--h:60%;&quot;</span>&gt;</span><br><br>            <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span><br><br>                <span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;fa fa-cube&quot;</span> <span class="hljs-attr">aria-hidden</span>=<span class="hljs-string">&quot;true&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span><br><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;--h:80%;&quot;</span>&gt;</span><br><br>            <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span><br><br>                <span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;fa fa-share-square-o&quot;</span> <span class="hljs-attr">aria-hidden</span>=<span class="hljs-string">&quot;true&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span><br><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><br><br><br>        <span class="hljs-comment">&lt;!-- 选择签,为什么分三部分后续讲解 --&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;top&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;middle&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;bottom&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="css-部分"><a class="markdownIt-Anchor" href="#css-部分"></a> CSS 部分</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br></pre></td><td class="code"><pre><code class="hljs CSS">* &#123;<br><br>  <span class="hljs-comment">/* 初始化 */</span><br><br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;<br><br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;<br><br>&#125;<br><br><br><br><span class="hljs-selector-tag">body</span> &#123;<br><br>  <span class="hljs-attribute">background-color</span>: black;<br><br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">100vh</span>;<br>  <span class="hljs-comment">/* vh指CSS中相对长度单位，表示相对视口高度（Viewport Height），1vh = 1% * 视口高度。 */</span><br><br>&#125;<br><br><br><br><span class="hljs-selector-class">.container</span> &#123;<br><br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">300px</span>;<br><br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">15px</span>;<br><br>  <span class="hljs-attribute">position</span>: absolute;<br><br>  <span class="hljs-attribute">left</span>: <span class="hljs-number">0</span>;<br><br><br><br>  <span class="hljs-comment">/* 实现垂直居中 */</span><br><br>  <span class="hljs-attribute">top</span>: <span class="hljs-number">50%</span>;<br><br>  <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translateY</span>(-<span class="hljs-number">50%</span>);<br><br><br><br>  <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#222</span>;<br><br>  <span class="hljs-attribute">overflow</span>: hidden;<br><br><br><br>  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">0</span> <span class="hljs-number">15px</span> <span class="hljs-number">15px</span> <span class="hljs-number">0</span>;<br><br>  <span class="hljs-comment">/* 动画过渡之后的伸展 */</span><br><br>  <span class="hljs-attribute">transition</span>: <span class="hljs-number">0.3s</span>;<br><br>&#125;<br><br><br><br><span class="hljs-selector-class">.container</span><span class="hljs-selector-pseudo">::before</span> &#123;<br><br>  <span class="hljs-comment">/* 这是伪元素选择器,在元素内部开始的部分创建一个元素*/</span><br><br>  <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot;&quot;</span>;<br><br>  <span class="hljs-comment">/* 一定要有content */</span><br><br>  <span class="hljs-attribute">background-color</span>: lightseagreen;<br><br>  <span class="hljs-attribute">position</span>: absolute;<br><br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">50%</span>;<br><br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;<br><br>  <span class="hljs-attribute">left</span>: <span class="hljs-number">0</span>;<br><br>  <span class="hljs-attribute">top</span>: <span class="hljs-number">0</span>;<br><br>  <span class="hljs-comment">/* 不可以遮蔽图标，在图标下层，置于底层 */</span><br><br>  <span class="hljs-attribute">z-index</span>: -<span class="hljs-number">1</span>;<br><br>&#125;<br><br><br><br><span class="hljs-selector-class">.container</span><span class="hljs-selector-pseudo">:hover</span> &#123;<br><br>  <span class="hljs-comment">/* 鼠标悬停后拉长 */</span><br><br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;<br><br>  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">0</span> <span class="hljs-number">30px</span> <span class="hljs-number">30px</span> <span class="hljs-number">0</span>;<br><br>&#125;<br><br><br><br><span class="hljs-selector-class">.container</span> <span class="hljs-selector-tag">li</span> &#123;<br><br>  <span class="hljs-comment">/* 标签列表 */</span><br><br>  <span class="hljs-attribute">position</span>: absolute;<br><br>  <span class="hljs-comment">/* 不同标签高度不同，高度在HTML输入 */</span><br><br>  <span class="hljs-attribute">top</span>: <span class="hljs-built_in">var</span>(--h);<br><br>  <span class="hljs-comment">/* li标签实现水平竖直居中 */</span><br><br>  <span class="hljs-attribute">display</span>: flex;<br><br>  <span class="hljs-attribute">justify-content</span>: center;<br><br>  <span class="hljs-attribute">align-items</span>: center;<br><br><br><br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">20%</span>;<br><br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br><br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">20px</span>;<br><br>&#125;<br><br><span class="hljs-selector-class">.container</span> <span class="hljs-selector-tag">li</span> <span class="hljs-selector-tag">a</span> &#123;<br><br>  <span class="hljs-comment">/* 图标在伸展开来之前是透明的 */</span><br><br>  <span class="hljs-attribute">color</span>: transparent;<br><br>  <span class="hljs-attribute">transition</span>: <span class="hljs-number">0.3s</span>;<br><br>&#125;<br><br><br><br><span class="hljs-selector-class">.container</span><span class="hljs-selector-pseudo">:hover</span> <span class="hljs-selector-tag">li</span> <span class="hljs-selector-tag">a</span> &#123;<br><br>  <span class="hljs-comment">/* 鼠标悬停之后选卡展开，标签变成白色显示 */</span><br><br>  <span class="hljs-attribute">color</span>: white;<br><br>&#125;<br><br><br><br><span class="hljs-selector-class">.container</span> <span class="hljs-selector-class">.top</span> &#123;<br><br>  <span class="hljs-attribute">width</span>: <span class="hljs-built_in">calc</span>(<span class="hljs-number">100%</span> - <span class="hljs-number">30px</span>);<br><br>  <span class="hljs-attribute">margin-left</span>: <span class="hljs-number">30px</span>;<br><br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">20%</span>;<br><br>  <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#222</span>;<br><br>  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">10px</span>;<br><br>  <span class="hljs-comment">/* 动画过渡 */</span><br><br>  <span class="hljs-attribute">transition</span>: <span class="hljs-number">0.2s</span>;<br><br>&#125;<br><br><br><br><span class="hljs-selector-class">.container</span> <span class="hljs-selector-class">.middle</span> &#123;<br><br>  <span class="hljs-attribute">width</span>: <span class="hljs-built_in">calc</span>(<span class="hljs-number">100%</span> - <span class="hljs-number">50px</span>);<br><br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">20%</span>;<br><br>  <span class="hljs-attribute">background-color</span>: lightseagreen;<br><br>  <span class="hljs-attribute">margin-left</span>: <span class="hljs-number">35px</span>;<br><br>  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">15px</span>;<br><br>  <span class="hljs-comment">/* 动画过渡 */</span><br><br>  <span class="hljs-attribute">transition</span>: <span class="hljs-number">0.2s</span>;<br><br>&#125;<br><br><br><br><span class="hljs-selector-class">.container</span> <span class="hljs-selector-class">.bottom</span> &#123;<br><br>  <span class="hljs-attribute">width</span>: <span class="hljs-built_in">calc</span>(<span class="hljs-number">100%</span> - <span class="hljs-number">30px</span>);<br><br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;<br><br>  <span class="hljs-attribute">margin-left</span>: <span class="hljs-number">30px</span>;<br><br>  <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#222</span>;<br><br>  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">10px</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span>;<br><br>&#125;<br><br><br><br><span class="hljs-comment">/* li:nth-child(n)是伪类选择器，匹配属于其父元素的子元素的第n个li元素 */</span><br><br><span class="hljs-comment">/* ~是后继兄弟选择器 */</span><br><br><span class="hljs-selector-class">.container</span> <span class="hljs-selector-tag">li</span><span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">1</span>) ~ <span class="hljs-selector-class">.top</span> &#123;<br><br>  <span class="hljs-comment">/* 这个选择器的含义是 匹配在container类下第一个li的后继所有top类的兄弟元素 */</span><br><br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">0%</span>;<br><br>&#125;<br><br><br><br><span class="hljs-selector-class">.container</span> <span class="hljs-selector-tag">li</span><span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">2</span>)<span class="hljs-selector-pseudo">:hover</span> ~ <span class="hljs-selector-class">.top</span> &#123;<br><br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">20%</span>;<br><br>&#125;<br><br><br><br><span class="hljs-selector-class">.container</span> <span class="hljs-selector-tag">li</span><span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">3</span>)<span class="hljs-selector-pseudo">:hover</span> ~ <span class="hljs-selector-class">.top</span> &#123;<br><br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">40%</span>;<br><br>&#125;<br><br><br><br><span class="hljs-selector-class">.container</span> <span class="hljs-selector-tag">li</span><span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">4</span>)<span class="hljs-selector-pseudo">:hover</span> ~ <span class="hljs-selector-class">.top</span> &#123;<br><br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">60%</span>;<br><br>&#125;<br><br><br><br><span class="hljs-selector-class">.container</span> <span class="hljs-selector-tag">li</span><span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">5</span>)<span class="hljs-selector-pseudo">:hover</span> ~ <span class="hljs-selector-class">.top</span> &#123;<br><br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">80%</span>;<br><br>&#125;<br></code></pre></td></tr></table></figure><h2 id="代码逻辑"><a class="markdownIt-Anchor" href="#代码逻辑"></a> 代码逻辑</h2><p>其实重点要理解的是标签页为什么分为 top，middle，bottom 三个部分。</p><p>为了方便观察，我将 top 设为红色，middle 为绿色，bottom 为蓝色，如图。</p><p><img src="/img/%E4%BC%B8%E7%BC%A9%E8%8F%9C%E5%8D%952.png" alt="三个盒子" /></p><p>光标移动导致 top 的 height 变动，也就是 top 模块的伸缩，间接推动 middle 模块的位置，使 middle 指向选中的图标。<br />（把 top 调回和 container 一样的颜色，就好像 middle“主动”在跑）</p><p>那似乎 bottom 没有也行嘛~<br />那我们实验一下，如果没有 bottom，效果是：<br /><img src="/img/%E4%BC%B8%E7%BC%A9%E8%8F%9C%E5%8D%953.png" alt="no bottom" /></p><p>对比一下，有什么不同？<br />！对，最后两个滑块有一半变成了绿色，就是说 container::before 的块突出来了。<br />我们再看看源码，发现 before 的 width 是 50%，不是一个固定的 px 值，会随着 container 的变大而变大，始终占 container 的 50%。而 li 标签是居中的，那么必然会和 before 块有重合。那样不好看呀，不是我们想要的。所以我们拿了一个 bottom 块来把 before 块给重叠覆盖住。<br /><mark><strong>注意：</strong></mark>不是挤压，因为这几个块不是 flex，并且 before 在 bottom 块之前，要挤也是 before 挤 bottom。<br />（下图我把 before 置于底层取消了,验证了我的猜想）</p><p><img src="/img/%E4%BC%B8%E7%BC%A9%E8%8F%9C%E5%8D%954.png" alt="取消before置于底层" /></p><h1 id="小结"><a class="markdownIt-Anchor" href="#小结"></a> 小结</h1><ul><li>这个例子来自 b 站：<a href="https://www.bilibili.com/video/BV1XS4y157sc?share_source=copy_web&amp;vd_source=79fa324dc233ab4f9ebea9d43b4c4d87">HTML5+CSS3 小实例：隐藏式侧边栏菜单</a></li><li>模仿的时候一定要认真思考每一行代码的效果，每一个模块设置的原因！不懂的地方就改代码验证。</li><li>小组件也很考验前端实现逻辑，也很有思维含量~</li><li>举一反三，横着的菜单也该会做了</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>CSS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>初学css实战 制作登录页面</title>
    <link href="/2022/07/14/%E7%99%BB%E5%BD%95%E7%95%8C%E9%9D%A2/"/>
    <url>/2022/07/14/%E7%99%BB%E5%BD%95%E7%95%8C%E9%9D%A2/</url>
    
    <content type="html"><![CDATA[<h1 id="最终效果"><a class="markdownIt-Anchor" href="#最终效果"></a> 最终效果：</h1><p><img src="/img/%E7%99%BB%E5%BD%95%E7%95%8C%E9%9D%A2.png" alt="登录界面" /></p><h1 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h1><h2 id="html部分"><a class="markdownIt-Anchor" href="#html部分"></a> HTML部分</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>登录页面<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;login.css&quot;</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;outbox&quot;</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;pic&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;rightbox&quot;</span>&gt;</span><br><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;textbox&quot;</span>&gt;</span><br><br>                <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>Login/Register<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br><br>                <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;USER NAME&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;inputbox&quot;</span>&gt;</span><br><br>                <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;PASSWORD&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;inputbox&quot;</span>&gt;</span><br><br>                <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;forget&quot;</span>&gt;</span>Forget Password?<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><br>                <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;login&quot;</span>&gt;</span>Login<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br><br></code></pre></td></tr></table></figure><h3 id="html部分代码逻辑"><a class="markdownIt-Anchor" href="#html部分代码逻辑"></a> html部分代码逻辑</h3><ol><li>outbox是整个大框</li><li>pic是放在左边的图片。为什么要用div然后用background来设置，而不用img直接插入呢：是因为我们需要让图片自适应outbox这个框框（使用background-size属性）<strong>这种将插入图片作为背景图片进行操作是一种常用方法</strong></li><li>rightbox是右边的白框部分（由于插入的图片也是白底，所以这个例子看不太出来）</li><li>textbox是所有文字内容合成的框。这样便于整体调整位置，不会每一段文字散开来</li><li>然后给每个部分的文字设置样式（盒模型）</li></ol><h2 id="css部分"><a class="markdownIt-Anchor" href="#css部分"></a> CSS部分</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">body</span> &#123;<br><br>  <span class="hljs-attribute">background-image</span>: <span class="hljs-built_in">linear-gradient</span>(to right, <span class="hljs-number">#ba5370</span>, <span class="hljs-number">#f4e2d8</span>);<br><br>  <span class="hljs-comment">/*严格来说background-image要做浏览器兼容*/</span><br><br>  <span class="hljs-attribute">display</span>: flex; <span class="hljs-comment">/*将整个body定义为一个flex容器*/</span><br><br>  <span class="hljs-attribute">justify-content</span>: center; <span class="hljs-comment">/*将flex项目在容器中心对齐*/</span><br><br>&#125;<br><br><span class="hljs-selector-class">.outbox</span> &#123;<br><br>  <span class="hljs-comment">/*定义为弹性布局*/</span><br><br>  <span class="hljs-attribute">display</span>: flex;<br><br>  <br><br>  <span class="hljs-comment">/*规定定位类型*/</span><br><br>  <span class="hljs-attribute">position</span>: relative;<br><br>  <span class="hljs-attribute">top</span>: <span class="hljs-number">50px</span>;<br><br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">1000px</span>;<br><br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">550px</span>;<br><br>  <br><br>  <span class="hljs-comment">/*其他效果*/</span><br><br>  <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">0</span> <span class="hljs-number">5px</span> <span class="hljs-number">15px</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0.8</span>);<br><br>&#125;<br><br><span class="hljs-selector-class">.pic</span> &#123;<br><br>  <span class="hljs-attribute">background-image</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">pic/side4.jpg</span>);<br><br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">700px</span>;<br><br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">550px</span>;<br><br>  <span class="hljs-comment">/*把背景图像扩展至足够大，以使背景图像完全覆盖背景区域。*/</span><br><br>  <span class="hljs-attribute">background-size</span>: cover;<br><br>&#125;<br><br><span class="hljs-selector-class">.rightbox</span> &#123;<br><br>  <span class="hljs-attribute">display</span>: flex;<br><br>  <span class="hljs-attribute">justify-content</span>: center; <span class="hljs-comment">/*将felx项目--即下面的textbox在容器的水平中心*/</span><br><br>  <span class="hljs-attribute">align-items</span>: center; <span class="hljs-comment">/*将felx项目--即下面的textbox在容器的竖直中心*/</span><br><br>  <br><br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;<br><br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">550px</span>;<br><br>  <span class="hljs-attribute">background-color</span>: white;<br><br>&#125;<br><br><span class="hljs-selector-class">.textbox</span> &#123;<br><br>  <span class="hljs-attribute">position</span>: relative;<br><br>  <span class="hljs-attribute">top</span>: <span class="hljs-number">20px</span>;<br><br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;<br><br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">500px</span>;<br><br>&#125;<br><br><span class="hljs-selector-class">.textbox</span> <span class="hljs-selector-tag">h1</span> &#123;<br><br>  <span class="hljs-attribute">margin-left</span>: <span class="hljs-number">30px</span>;<br><br>  <span class="hljs-attribute">font</span>: Garamond <span class="hljs-number">900</span> <span class="hljs-number">35px</span> <span class="hljs-string">&quot;&quot;</span>; <span class="hljs-comment">/*Garamond是字体 900是字体加粗允许值*/</span><br><br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#39e48b</span>;<br><br>&#125;<br><br><span class="hljs-selector-class">.textbox</span> <span class="hljs-selector-class">.inputbox</span> &#123;<br><br>  <span class="hljs-comment">/*按照box的元素从内到外设计*/</span><br><br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">200px</span>;<br><br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;<br><br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">20px</span> <span class="hljs-number">30px</span>;<br><br>  <span class="hljs-attribute">border-style</span>: none;<br><br>  <span class="hljs-attribute">border-bottom</span>: <span class="hljs-number">3px</span> solid <span class="hljs-number">#92bda6</span>;<br><br>&#125;<br><br><span class="hljs-selector-class">.forget</span> &#123;<br><br>  <span class="hljs-attribute">font</span>: <span class="hljs-number">12px</span>;<br><br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#92bda6</span>;<br><br>  <span class="hljs-attribute">float</span>: right;<br><br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">15px</span> <span class="hljs-number">25px</span>; <span class="hljs-comment">/*微调位置*/</span><br><br>&#125;<br><br><span class="hljs-selector-class">.login</span> &#123;<br><br>  <span class="hljs-attribute">display</span>: block;<br><br>  <span class="hljs-comment">/*定位*/</span><br><br>  <span class="hljs-attribute">position</span>: absolute;<br><br>  <span class="hljs-attribute">bottom</span>: <span class="hljs-number">100px</span>;<br><br>  <span class="hljs-attribute">margin-left</span>: <span class="hljs-number">75px</span>;<br><br>  <span class="hljs-comment">/*盒子样式*/</span><br><br>  <span class="hljs-attribute">background-image</span>: <span class="hljs-built_in">linear-gradient</span>(to left, <span class="hljs-number">#9c88ff</span>, <span class="hljs-number">#3cadeb</span>);<br><br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">150px</span>;<br><br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">60px</span>;<br><br>  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">20px</span>;<br><br>  <span class="hljs-comment">/*文字样式*/</span><br><br>  <span class="hljs-attribute">font</span>: <span class="hljs-number">900</span> <span class="hljs-number">30px</span> <span class="hljs-string">&quot;&quot;</span>;<br><br>  <span class="hljs-attribute">text-decoration</span>: none; <span class="hljs-comment">/*取消下划线*/</span><br><br>  <span class="hljs-attribute">text-align</span>: center;<br><br>  <span class="hljs-attribute">line-height</span>: <span class="hljs-number">60px</span>;<br><br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#f0acea</span>;<br><br>&#125;<br></code></pre></td></tr></table></figure><p>注意看里面的注释，实现逻辑在里面</p><h1 id="感受"><a class="markdownIt-Anchor" href="#感受"></a> 感受</h1><ol><li>这个例子是参考了b站一位up的视频<a href="https://www.bilibili.com/video/BV1KA411T75J?spm_id_from=333.1007.top_right_bar_window_custom_collection.content.click">参考视频</a>，适合自己学习进度的例子很能帮助自己理解知识。</li><li>在参考过程中最好是自己先过一遍代码，然后自己写，不会的再参考。一定不能照抄，要认真体悟示例的逻辑之后有自己的实现逻辑</li><li>途中发现html的div内嵌套div的代码缩进是有语法意义的，当时查了半天找不到bug原因，如果下次有莫名的样式无法应用问题，可以看看是不是打代码时候缩进错了</li><li>审美也是一大关啊，现在配色全靠直觉</li><li>flex布局还需要深入体悟</li><li>各种选择器必须要实战运用才行！</li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>CSS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CSS选择器</title>
    <link href="/2022/07/10/CSS%E9%80%89%E6%8B%A9%E5%99%A8/"/>
    <url>/2022/07/10/CSS%E9%80%89%E6%8B%A9%E5%99%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="什么是选择器"><a class="markdownIt-Anchor" href="#什么是选择器"></a> 什么是选择器</h1><p>每一条css样式声明（定义）由两部分组成，形式如下：</p><blockquote><p>选择器{<br />样式;<br />}</p></blockquote><p>在{}之前的部分就是“选择器”，“选择器”指明了{}中的“样式”的<strong>作用对象</strong>，也就是“样式”作用于网页中的哪些元素。</p><h1 id="标签元素-类型选择器"><a class="markdownIt-Anchor" href="#标签元素-类型选择器"></a> 标签（元素、类型）选择器</h1><p>HTML代码中的标签作为选择器</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>标签选择器<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span><br><span class="language-css"></span><br><span class="language-css">        <span class="hljs-selector-tag">h1</span>&#123;</span><br><span class="language-css"></span><br><span class="language-css">            <span class="hljs-attribute">color</span>:red;</span><br><span class="language-css"></span><br><span class="language-css">            <span class="hljs-attribute">font-size</span>:<span class="hljs-number">30px</span>;</span><br><span class="language-css"></span><br><span class="language-css">        &#125; <span class="hljs-comment">/*之后的h1都会自动是这个样式了*/</span></span><br><span class="language-css"></span><br><span class="language-css">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>标签选择器<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>也叫元素选择器、类型选择器。<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="/img/css_bq.png" alt="标签选择器" /></p><h1 id="分组选择器"><a class="markdownIt-Anchor" href="#分组选择器"></a> 分组选择器</h1><p>如下，h2和p同用一个样式</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">h2</span>,<span class="hljs-selector-tag">p</span>&#123;<br><span class="hljs-attribute">color</span>:blue;<br>&#125;<br></code></pre></td></tr></table></figure><p>以上代码等价于：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">h2</span>&#123;<span class="hljs-attribute">color</span>:blue;&#125;<br><span class="hljs-selector-tag">p</span>&#123;<span class="hljs-attribute">color</span>:blue;&#125;<br></code></pre></td></tr></table></figure><p>通过分组，创作者可以将某些类型的样式“压缩”在一起，这样就可以得到更简洁的样式表。</p><p>这是很常用的一种选择器！</p><h3 id="通配符选择器"><a class="markdownIt-Anchor" href="#通配符选择器"></a> 通配符选择器</h3><p>CSS2 引入了一种新的简单选择器 - 通配选择器（universal selector），显示为一个星号（*）。这个声明等价于列出了文档中所有元素的一个分组选择器。该选择器可以与任何元素匹配，就像是一个通配符。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css">*&#123;<br><span class="hljs-attribute">color</span>:green;<br>&#125; <span class="hljs-comment">/*文档中所有元素的 color 属性值指定为 green*/</span><br></code></pre></td></tr></table></figure><h1 id="类选择器"><a class="markdownIt-Anchor" href="#类选择器"></a> 类选择器</h1><p>类选择器允许以一种独立于文档元素的方式来指定样式。该选择器可以单独使用，也可以与其他元素结合使用。</p><p><strong>要应用样式而不考虑具体设计的元素，最常用的方法就是使用类选择器。</strong></p><blockquote><p>.类选器名称 {<br />css样式代码;<br />}</p></blockquote><h2 id="结合元素选择器"><a class="markdownIt-Anchor" href="#结合元素选择器"></a> 结合元素选择器</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">p</span><span class="hljs-selector-class">.important</span>&#123;<br><span class="hljs-attribute">color</span>:red;<br>&#125;<span class="hljs-comment">/*class属性值为important的所有段落*/</span><br></code></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;important&quot;</span>&gt;</span>example<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="多类选择器"><a class="markdownIt-Anchor" href="#多类选择器"></a> 多类选择器</h2><p>我们假设 class 为 important 的所有元素都是粗体，而 class 为 warning 的所有元素为斜体，如果我们还想<strong>class 中同时包含 important 和 warning 的所有元素还有一个银色的背景</strong> 。就可以写作：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>多类选择器<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span><br><span class="language-css"></span><br><span class="language-css">        <span class="hljs-selector-class">.important</span>&#123;</span><br><span class="language-css"></span><br><span class="language-css">            <span class="hljs-attribute">font-weight</span>: bold;</span><br><span class="language-css"></span><br><span class="language-css">        &#125;</span><br><span class="language-css"></span><br><span class="language-css">        <span class="hljs-selector-class">.warning</span>&#123;</span><br><span class="language-css"></span><br><span class="language-css">            <span class="hljs-attribute">font-style</span>:italic;</span><br><span class="language-css"></span><br><span class="language-css">        &#125;</span><br><span class="language-css"></span><br><span class="language-css">        <span class="hljs-selector-class">.important</span><span class="hljs-selector-class">.warning</span>&#123;</span><br><span class="language-css"></span><br><span class="language-css">            <span class="hljs-attribute">background</span>:silver;</span><br><span class="language-css"></span><br><span class="language-css">        &#125;<span class="hljs-comment">/*注意这里！*/</span></span><br><span class="language-css"></span><br><span class="language-css">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;important&quot;</span>&gt;</span>仅仅important<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;warning&quot;</span>&gt;</span>仅仅warning<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;important warning&quot;</span>&gt;</span>important和warning同时使用<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-comment">&lt;!--注意这里--&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="/img/css_%E5%A4%9A%E7%B1%BB%E9%80%89%E6%8B%A9%E5%99%A8.png" alt="多类选择器演示效果" /></p><h1 id="id选择器"><a class="markdownIt-Anchor" href="#id选择器"></a> ID选择器</h1><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-id">#intro</span>&#123;<br><span class="hljs-attribute">color</span>:red;<br>&#125;<br></code></pre></td></tr></table></figure><p>调用：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">h1</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;intro&quot;</span>&gt;</span>example<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="id选择器和类选择器的区别"><a class="markdownIt-Anchor" href="#id选择器和类选择器的区别"></a> ID选择器和类选择器的区别</h2><ol><li>类选择器可以给任意多元素使用。而在一个HTML文档中，ID选择器用且只能用一次</li><li>ID选择器不能多个一起使用</li></ol><h1 id="属性选择器"><a class="markdownIt-Anchor" href="#属性选择器"></a> 属性选择器</h1><p>属性选择器可以根据元素的属性及属性值来选择元素。</p><h2 id="根据属性及属性值来选择"><a class="markdownIt-Anchor" href="#根据属性及属性值来选择"></a> 根据属性及属性值来选择</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>属性选择器<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span><br><span class="language-css"><span class="hljs-comment">/*包含title属性的元素都应用此样式*/</span></span><br><span class="language-css">        <span class="hljs-selector-attr">[title]</span> &#123;<span class="hljs-attribute">font-style</span>: italic;&#125;</span><br><span class="language-css"><span class="hljs-comment">/*包含href属性的a元素都应用此样式*/</span></span><br><span class="language-css">        <span class="hljs-selector-tag">a</span><span class="hljs-selector-attr">[href]</span> &#123;<span class="hljs-attribute">color</span>: pink;&#125;</span><br><span class="language-css">        <span class="hljs-comment">/*包含href和title属性的a元素应用此样式*/</span></span><br><span class="language-css">        <span class="hljs-selector-tag">a</span><span class="hljs-selector-attr">[href]</span><span class="hljs-selector-attr">[title]</span> &#123;<span class="hljs-attribute">color</span>: red;&#125;</span><br><span class="language-css">        <span class="hljs-comment">/*指定属性值,且属性/值对需要严格相等，不可包含任何其他值*/</span></span><br><span class="language-css">        <span class="hljs-selector-tag">a</span><span class="hljs-selector-attr">[href=<span class="hljs-string">&quot;https://www.w3school.com.cn&quot;</span>]</span>&#123;<span class="hljs-attribute">font-size</span>:<span class="hljs-number">40px</span>;&#125;</span><br><span class="language-css">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;示例&quot;</span>&gt;</span>仅有title属性<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://www.bilibili.com&quot;</span>&gt;</span>b站<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">br</span>/&gt;</span><br><span class="hljs-comment">&lt;!--效果是保留了title的斜体，就近原则选择了红色而不是粉色--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://www.bilibili.com&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;b站&quot;</span>&gt;</span>b站<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">br</span>/&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://www.w3school.com.cn&quot;</span>&gt;</span>w3school<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="/img/css_%E5%B1%9E%E6%80%A7%E9%80%89%E6%8B%A9%E5%99%A8.png" alt="属性选择器" /></p><h2 id="根据部分属性值选择"><a class="markdownIt-Anchor" href="#根据部分属性值选择"></a> 根据部分属性值选择</h2><p>如果需要根据属性值中的词列表的<mark>某个词</mark>进行选择，则需要使用波浪号（~）。</p><p>例如：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">p</span><span class="hljs-selector-attr">[title~=<span class="hljs-string">&quot;important&quot;</span>]</span>&#123;<span class="hljs-attribute">color</span>:red;&#125;<br></code></pre></td></tr></table></figure><p>则以下两种方式都能应用样式：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;important warning&quot;</span>&gt;</span>This is a paragraph.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;important&quot;</span>&gt;</span>This is a paragraph.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="/img/css_%E5%B1%9E%E6%80%A7%E9%80%89%E6%8B%A9%E5%99%A82.png" alt="部分属性值选择器" /></p><p>这种选择器有个很好的应用：<br />如果文档中包含很多图片，这些图片title名分为A,B,C三类，每个图片有123···的编号如A 1,A 2，则可以用部分属性值选择器来给每一类设置样式。</p><h2 id="子串匹配属性选择器"><a class="markdownIt-Anchor" href="#子串匹配属性选择器"></a> 子串匹配属性选择器</h2><p>这个比根据部分属性值选择更牛，只需要子字符串匹配到就行了。这种属性选择器最常见的用途是<em>匹配语言值</em>。</p><p>拿上面图片编号的例子来说，图片title可以是A1,A2这样，没有空格也可以</p><p><img src="/img/css_%E5%AD%90%E4%B8%B2%E5%8C%B9%E9%85%8D.png" alt="子串匹配属性选择器" /></p><p>另：<code>[abc|=&quot;def&quot;]</code> 会选择abc属性等于def或以def开头的所有元素。</p><h1 id="子元素选择器"><a class="markdownIt-Anchor" href="#子元素选择器"></a> 子元素选择器</h1><p>用大于符号(&gt;)（子结合符），用于选择指定标签元素的<strong>第一代子元素。</strong></p><p>上例子理解！</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>子元素选择器<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span><br><span class="language-css"></span><br><span class="language-css">        <span class="hljs-selector-tag">p</span> &gt; <span class="hljs-selector-tag">em</span>&#123;<span class="hljs-attribute">color</span>:blue;&#125;</span><br><span class="language-css"></span><br><span class="language-css">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>这是<span class="hljs-tag">&lt;<span class="hljs-name">em</span>&gt;</span>第一个<span class="hljs-tag">&lt;/<span class="hljs-name">em</span>&gt;</span>，然后这是<span class="hljs-tag">&lt;<span class="hljs-name">em</span>&gt;</span>第二个<span class="hljs-tag">&lt;/<span class="hljs-name">em</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>这是<span class="hljs-tag">&lt;<span class="hljs-name">em</span>&gt;</span>第三个<span class="hljs-tag">&lt;/<span class="hljs-name">em</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>这是<span class="hljs-tag">&lt;<span class="hljs-name">u</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">em</span>&gt;</span>第四个<span class="hljs-tag">&lt;/<span class="hljs-name">em</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">u</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="/img/css_%E5%AD%90%E9%80%89%E6%8B%A9%E5%99%A8.png" alt="子元素选择器" /></p><p><strong>例子解释</strong>：</p><ol><li><code>p &gt; em&#123;color:blue;&#125;</code> 意味着：选择作为p元素子元素所有em元素内容应用样式</li><li>像“第二个”这样，仍然是p的<em>第一代子元素</em>，样式生效</li><li>虽然第一行的p已经应用过该样式，但是“第三个”仍是p的第一代子元素，样式生效（以上两个例子说明子元素选择器可以任意次数使用）</li><li>“第四个”不是p的第一代子元素，而是em是第一代子元素，故没法使用p的子元素选择器</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.example</span> &gt; <span class="hljs-selector-tag">span</span>&#123;<br><span class="hljs-attribute">border</span>:<span class="hljs-number">1px</span> solid red;<br>&#125;<br></code></pre></td></tr></table></figure><p>这个要怎么理解呢？<br />首先可以等价为<code>*.example &gt; span</code> 这行代码会使得任意元素中，含class名为example的子元素span加上红色边框</p><h1 id="后代选择器"><a class="markdownIt-Anchor" href="#后代选择器"></a> 后代选择器</h1><p>又称为“包含选择器”</p><p>使用空格作为结合符。与子元素选择器相比，&gt;作用于元素的<mark>第一代后代</mark>，空格作用于元素的<mark>所有后代</mark>。</p><p>后代选择器的使用是非常有益的，如果父元素内包括的HTML元素具有唯一性，则不必给内部元素再指定class或id，直接应用此选择器即可。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>后代选择器<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span><br><span class="language-css"></span><br><span class="language-css">        <span class="hljs-selector-class">.example</span> <span class="hljs-selector-tag">em</span>&#123;<span class="hljs-attribute">color</span>:red;&#125;</span><br><span class="language-css"></span><br><span class="language-css">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h1</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;example&quot;</span>&gt;</span>啦啦啦<span class="hljs-tag">&lt;<span class="hljs-name">em</span>&gt;</span>啦啦啦啦<span class="hljs-tag">&lt;/<span class="hljs-name">em</span>&gt;</span>啦<span class="hljs-tag">&lt;<span class="hljs-name">u</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">em</span>&gt;</span>啦啦<span class="hljs-tag">&lt;/<span class="hljs-name">em</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">u</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="/img/css_%E5%90%8E%E4%BB%A3%E9%80%89%E6%8B%A9%E5%99%A8.png" alt="后代选择器" /></p><p>可以看到，就算最后两个“啦啦”不是h1（class=example）第一代后代也边红了。</p><h1 id="伪类选择器"><a class="markdownIt-Anchor" href="#伪类选择器"></a> 伪类选择器</h1><p>伪类选择符，它允许给html不存在的标签（标签的某种状态）设置样式，比如说我们给html中一个标签元素的鼠标滑过的状态来设置字体颜色:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:hover</span>&#123;<span class="hljs-attribute">color</span>:red;&#125;<br></code></pre></td></tr></table></figure><p>如果有：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">a</span>&gt;</span>你好呀<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>这是一个示例。<br></code></pre></td></tr></table></figure><p>那么鼠标经过“你好呀”三个字，这三个字就会变红。</p><p>关于伪类选择符，到目前为止，可以兼容所有浏览器的“伪类选择符”就是 a 标签上使用 :hover 了。其实 :hover 可以放在任意的标签上，比如说 p:hover，但是它们的兼容性也是很不好的，所以现在比较常用的还是 a:hover 的组合。</p><h1 id="后记"><a class="markdownIt-Anchor" href="#后记"></a> 后记</h1><ul><li>感觉学的好不熟练，明天看看有没有选择器的实战</li><li>这几个选择器嵌套起来真的好整人</li><li>被npy拉进了许嵩的坑哈哈，写的时候一直在听《留香》和《乌鸦》</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>CSS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CSS基础语法与链接方式</title>
    <link href="/2022/07/08/CSS%E8%AF%AD%E6%B3%95/"/>
    <url>/2022/07/08/CSS%E8%AF%AD%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h1 id="什么是-css"><a class="markdownIt-Anchor" href="#什么是-css"></a> 什么是 CSS？</h1><ul><li><em>CSS</em> 指的是层叠样式表* (<strong>C</strong>ascading <strong>S</strong>tyle <strong>S</strong>heets)</li><li>CSS 描述了<strong>如何在屏幕、纸张或其他媒体上显示 HTML 元素</strong></li><li>CSS 节省了大量工作。它可以同时控制多张网页的布局</li><li>外部样式表存储在 <strong>CSS 文件</strong>中，通过使用外部样式表文件，只需更改一个文件即可更改整个网站的外观</li></ul><p>*：也称级联样式表。</p><h1 id="css基础语法"><a class="markdownIt-Anchor" href="#css基础语法"></a> CSS基础语法</h1><p><strong>CSS规则集</strong>由<strong>选择器</strong>和<strong>声明块</strong>构成</p><p>选择器：指向要设置样式的HTML元素</p><p>声明块：</p><ul><li>用花括号括起来</li><li>多个声明用分号分隔</li></ul><p>声明：每条声明都包含一个CSS属性名称和一个值，以分号分隔</p><p><img src="/img/CSS%E8%AF%AD%E6%B3%95.png" alt="语法解释图" /></p><h1 id="内联式css样式"><a class="markdownIt-Anchor" href="#内联式css样式"></a> 内联式CSS样式</h1><p>其实就是用html中style属性<br />[[HTML 的style属性]]</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;color:blue&quot;</span>&gt;</span>示例<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></figure><h1 id="嵌入式css样式"><a class="markdownIt-Anchor" href="#嵌入式css样式"></a> 嵌入式CSS样式</h1><p>嵌入式css样式，就是可以把css样式代码写在&lt;style type=“text/css”&gt;&lt;/style&gt;标签之间。</p><p>(样式一多，内联式就很繁杂，不易于阅读和维护，这没法发挥CSS的优势了)</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>嵌入式css<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <br>    <span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"> <span class="hljs-comment">/*嵌入式css是在head里面的*/</span></span><br><span class="language-css">    <span class="hljs-selector-tag">span</span>&#123;</span><br><span class="language-css"></span><br><span class="language-css">        <span class="hljs-attribute">color</span>:blue;</span><br><span class="language-css"></span><br><span class="language-css">        <span class="hljs-comment">/*注意看，color后面跟的是冒号，blue没有双引号，最后有一个分号*/</span></span><br><span class="language-css"></span><br><span class="language-css">        <span class="hljs-attribute">font-weight</span>:bold;</span><br><span class="language-css"></span><br><span class="language-css">    &#125;</span><br><span class="language-css"></span><br><span class="language-css">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>《温泉》<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>这首歌好好听！<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="/img/css_qianru.png" alt="示例" /></p><h1 id="外部式css"><a class="markdownIt-Anchor" href="#外部式css"></a> 外部式CSS</h1><h2 id="基础语法"><a class="markdownIt-Anchor" href="#基础语法"></a> 基础语法</h2><p>外部式css样式(也可称为外联式)就是把css代码写一个单独的外部文件中，这个css样式文件以“<code>.css</code>”为扩展名，在&lt;head&gt;内（不是在&lt;style&gt;标签内）使用&lt;link&gt;标签将css样式文件链接到HTML文件内</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;example.css&quot;</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span> /&gt;</span><br></code></pre></td></tr></table></figure><ul><li>href 规定被连接文档的位置</li><li>rel=&quot;stylesheet&quot;表示链接文档为当前文档的外部样式表</li><li>type=“text/css&quot;描述链接的是样式表类型</li></ul><h2 id="htmllink标签"><a class="markdownIt-Anchor" href="#htmllink标签"></a> HTML&lt;link&gt;标签</h2><p>&lt;link&gt; 标签定义文档与外部资源的关系，最常见的用途是链接样式表。</p><p>link 元素是空元素，它仅包含属性。只能存在于 head 部分，不过它可出现任何次数。</p><p><img src="/img/html_link.png" alt="link的属性" /></p><p>(上图来自w3school，侵删)</p><h2 id="代码示例"><a class="markdownIt-Anchor" href="#代码示例"></a> 代码示例</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs CSS"><span class="hljs-comment">/*这是一个css文件，命名为try.css*/</span><br><span class="hljs-selector-tag">span</span> &#123;<br><br>    <span class="hljs-attribute">color</span>: blue;<br>    <span class="hljs-attribute">font-weight</span>: bold;<br><br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-comment">&lt;!--这是一个HTML文件--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>外部式css<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;try.css&quot;</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span> /&gt;</span><br>    <span class="hljs-comment">&lt;!--此处url这样写是因为我把try.css和这个html放在同一目录下了--&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>《温泉》<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>这首歌好好听！<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="/img/css_qianru.png" alt="示例" /></p><h1 id="后记"><a class="markdownIt-Anchor" href="#后记"></a> 后记</h1><ul><li>三种链接方式遵循<strong>就近原则</strong>来判断优先级</li><li>学习速度太缓慢了，每天老摸鱼orz</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>CSS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HTML与用户交互</title>
    <link href="/2022/07/08/HTML%E4%B8%8E%E7%94%A8%E6%88%B7%E4%BA%A4%E4%BA%92/"/>
    <url>/2022/07/08/HTML%E4%B8%8E%E7%94%A8%E6%88%B7%E4%BA%A4%E4%BA%92/</url>
    
    <content type="html"><![CDATA[<h1 id="form"><a class="markdownIt-Anchor" href="#form"></a> &lt;form&gt;</h1><p>网站使用表单（form）实现与用户的交互。表单可以把浏览者输入的数据传送到服务器端，然后服务器端会处理表单传过来的数据，这是后端的内容。</p><h2 id="语法"><a class="markdownIt-Anchor" href="#语法"></a> 语法</h2><blockquote><p>&lt;form method=“传送方式”  action=“服务器文件”&gt;<br />&lt;/form&gt;</p></blockquote><p>1.<strong>&lt;form&gt; ：</strong>&lt;form&gt;标签是成对出现的，以&lt;form&gt;开始，以&lt;/form&gt;结束。</p><p>2.<strong>action</strong> ：浏览者输入的数据被传送到的地方,比如一个PHP页面(save.php)。</p><p>3.<strong>method</strong> <strong>：</strong> 数据传送的方式（get/post）。</p><h1 id="input"><a class="markdownIt-Anchor" href="#input"></a> &lt;input&gt;</h1><p>获得输入框</p><h2 id="基本语法"><a class="markdownIt-Anchor" href="#基本语法"></a> 基本语法</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">form</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;输入框内容类型&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;名称&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;文本&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br></code></pre></td></tr></table></figure><ol><li>type: 例如，当type=“text”时为文本输入框</li><li>name：为文本框命名，以备后台程序ASP、PHP使用</li><li>value：起提示作用，为文本框输入默认值</li></ol><h2 id="input的placeholder属性"><a class="markdownIt-Anchor" href="#input的placeholder属性"></a> &lt;input&gt;的placeholder属性</h2><p>提示用户输入框需要输入框的内容。</p><p>1、placeholder属性为输入框占位符,里面可以放提示的输入信息。</p><p>2、placeholder属性的值可以任意填写,当输入框输入内容时,占位符内容消失,输入框无内容时,占位符内容显示。</p><p>3、占位符内容不是输入框真正的内容。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">action</span>=<span class="hljs-string">&quot;save.php&quot;</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;post&quot;</span>&gt;</span><br><br>        用户名： <span class="hljs-comment">&lt;!--form内可以直接输入文字--&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;userName&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入用户名&quot;</span> /&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">br</span>/&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">br</span>/&gt;</span><br><br>        密码:<br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;pass&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入密码&quot;</span> /&gt;</span><br><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="/img/html_form1.png" alt="效果展示" /></p><h2 id="input的type属性"><a class="markdownIt-Anchor" href="#input的type属性"></a> &lt;input&gt;的type属性</h2><p>对不同的属性值，输入框会有不同的效果</p><table><thead><tr><th>属性值</th><th>输入框效果</th></tr></thead><tbody><tr><td>text</td><td>可以输入文本</td></tr><tr><td>password</td><td>输入的内容默认不显示（可选择显示）</td></tr><tr><td>number</td><td>只能输入数字，输入其他字符无效。最右侧会有一个加减符号，可以调整输入数字的大小。</td></tr><tr><td>url</td><td>值需以http://或者https://开头,且后面必须有内容,否则表单提交的时候会报错误提示。</td></tr><tr><td>email</td><td>数字框的值必须包含@,@之后必须有内容,否则会报错误提示。</td></tr><tr><td>submit</td><td>提交按钮</td></tr><tr><td>reset</td><td>重置按钮</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>我绝对不是骗信息<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-comment">&lt;!--重点在下面部分--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">action</span>=<span class="hljs-string">&quot;save.php&quot;</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;post&quot;</span>&gt;</span><br><br>        用户名： <span class="hljs-comment">&lt;!--form内可以直接输入文字--&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;userName&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入用户名&quot;</span> /&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">br</span>/&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>/&gt;</span><br><br>        密码:<br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;pass&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入密码&quot;</span> /&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">br</span>/&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>/&gt;</span><br><br>        您的生日:<br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;number&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;birthday&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;20030101&quot;</span> /&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">br</span>/&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>/&gt;</span><br><br>        您的邮箱：<br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;email&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;userEmail&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;1234567@qq.com&quot;</span> /&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">br</span>/&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>/&gt;</span><br><br>        您最喜欢的网址: <span class="hljs-comment">&lt;!--我实在编不下去了--&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;url&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;favWeb&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;http://www.bilibili.com&quot;</span> /&gt;</span><br><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="/img/html_form2.png" alt="各种type值" /></p><h2 id="单选框复选框"><a class="markdownIt-Anchor" href="#单选框复选框"></a> 单选框，复选框</h2><blockquote><p>&lt;input type=“radio/checkbox” value=“值” name=“名称” checked=“checked” /&gt;</p></blockquote><ol><li>type:</li></ol><p>当 type=“radio” 时，控件为<strong>单选框</strong>。<strong>同一组</strong>的单选按钮，name 取值一定要<strong>一致</strong></p><p>当 type=“checkbox” 时，控件为<strong>复选框</strong></p><ol start="2"><li><p>value：提交数据到服务器的值（后台程序PHP使用）</p></li><li><p>name：为控件命名，以备后台程序 ASP、PHP 使用</p></li><li><p>checked：当设置 checked=“checked” 时，该选项被<strong>默认选中</strong></p></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">action</span>=<span class="hljs-string">&quot;save.php&quot;</span> <span class="hljs-attr">metho</span>=<span class="hljs-string">&quot;post&quot;</span>&gt;</span><br><br>        性别：<br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;radio&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;1&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;gender&quot;</span>&gt;</span>男<br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;radio&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;0&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;gender&quot;</span>&gt;</span>女<br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">br</span>/&gt;</span><br><br>        您喜欢：<br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;美食&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;like&quot;</span>&gt;</span>美食<br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;睡觉&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;like&quot;</span>&gt;</span>睡觉<br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;写作业&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;like&quot;</span>&gt;</span>写作业<br><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="/img/html_radio.png" alt="这孩子怎么不喜欢写作业呢" /></p><h1 id="label"><a class="markdownIt-Anchor" href="#label"></a> &lt;label&gt;</h1><p>label标签不会向用户呈现任何特殊效果，它的作用是为鼠标用户改进了可用性。如果你在 label 标签内点击文本，就会触发此控件。就是说，当用户单击选中该label标签时，浏览器就会自动将焦点转到和标签相关的表单控件上（就自动选中和该label标签相关连的表单控件上）。</p><p>大白话解释图：</p><p><img src="/img/html_label.png" alt="label标签效果" /></p><h2 id="基本语法-2"><a class="markdownIt-Anchor" href="#基本语法-2"></a> 基本语法</h2><blockquote><p>&lt;label for=“控件id名称”&gt;</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">form</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;user name&quot;</span>&gt;</span>请输入您的用户名<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;user name&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;enter name&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>HTML</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HTML字符实体</title>
    <link href="/2022/07/06/HTML%E5%AD%97%E7%AC%A6%E5%AE%9E%E4%BD%93/"/>
    <url>/2022/07/06/HTML%E5%AD%97%E7%AC%A6%E5%AE%9E%E4%BD%93/</url>
    
    <content type="html"><![CDATA[<p>在 HTML 中，某些字符是预留的。在 HTML 中不能使用小于号（&lt;）和大于号（&gt;），这是因为浏览器会误认为它们是标签。如果希望正确地显示预留字符，我们必须在 HTML 源代码中使用<strong>字符实体</strong>（character entities）作替换表示。字符实体包括实体名称和实体编号两种表示方法。</p><p>可以类比理解c语言里面的关键字是不能做变量名的。</p><p>例如，不间断空格的字符实体是 ，那么我们需要用&amp;nbsp代表空格</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>这里有一个空格<span class="hljs-symbol">&amp;nbsp;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></figure><p><mark>键盘上不存在的字符也可以由实体名称或实体编号代替。</mark></p><h2 id="常用的字符实体"><a class="markdownIt-Anchor" href="#常用的字符实体"></a> 常用的字符实体</h2><table><thead><tr><th>字符</th><th>字符名称</th></tr></thead><tbody><tr><td>∏</td><td>&amp;prod;</td></tr><tr><td>∑</td><td>&amp;sum;</td></tr><tr><td>Δ</td><td>&amp;Delta;</td></tr><tr><td>©</td><td>&amp;copy;</td></tr><tr><td>←</td><td>&amp;larr;</td></tr><tr><td>↑</td><td>&amp;uarr;</td></tr><tr><td>→</td><td>&amp;rarr;</td></tr><tr><td>↓</td><td>&amp;darr;</td></tr><tr><td>&lt;</td><td>&amp;lt;</td></tr><tr><td>&gt;</td><td>&amp;gt;</td></tr><tr><td>™</td><td>&amp;trade;</td></tr><tr><td>不间断空格（即不会被处理的空格）</td><td>&amp;nbsp;</td></tr></tbody></table><p><strong>一定不要忘记在最后打上分号！</strong></p>]]></content>
    
    
    
    <tags>
      
      <tag>HTML</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HTML头部元素</title>
    <link href="/2022/07/05/HTML%E5%A4%B4%E9%83%A8%E5%85%83%E7%B4%A0/"/>
    <url>/2022/07/05/HTML%E5%A4%B4%E9%83%A8%E5%85%83%E7%B4%A0/</url>
    
    <content type="html"><![CDATA[<h1 id="head-元素"><a class="markdownIt-Anchor" href="#head-元素"></a> &lt;head&gt; 元素</h1><p>&lt;head&gt; 元素是<strong>所有头部元素的容器</strong>。&lt;head&gt; 内的元素可包含脚本，指示浏览器在何处可以找到样式表，提供元信息，等等。以下标签都可以添加到 head 部分：&lt;title&gt;、&lt;base&gt;、&lt;link&gt;、&lt;meta&gt;、&lt;script&gt; 以及 &lt;style&gt;。</p><h1 id="title元素"><a class="markdownIt-Anchor" href="#title元素"></a> &lt;title&gt;元素</h1><p>&lt;title&gt; 标签定义文档的标题。</p><p>title 元素在所有 HTML/XHTML 文档中都是必需的。</p><p>title 元素能够：</p><ul><li>定义浏览器工具栏中的标题</li><li>提供页面被添加到收藏夹时显示的标题</li><li>显示在搜索引擎结果中的页面标题</li></ul><h1 id="base元素"><a class="markdownIt-Anchor" href="#base元素"></a> &lt;base&gt;元素</h1><p>base标记是一个基链接标记，是一个单标记。</p><ul><li><p>base的herf属性：网页上的所有相对路径在链接时都将在前面加上基链接指向的地址，解决<strong>编程时候的相对路径问题</strong></p></li><li><p>base的target属性：设定文件显示新窗口的方式<br />1、target=&quot;_self&quot;表示：将链接的画面内容，显示在目前的视窗中。(内定值) 。 即：同窗口打开。<br />2、target=&quot;_parent&quot;表示：将链接的画面内容，当成文件的上一个画面。即：当前窗口打开。<br />3、target=&quot;_top&quot;表示：将框架中链接的画面内容，显示在没有框架的视窗中（即除去了框架)。即：顶端打开窗口。<br />4、target=&quot;_blank&quot;表示：将链接的画面内容，在新的浏览视窗中打开。即：打开新窗口。</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>演示<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">base</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://www.w3school.com.cn&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">base</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;_blank&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/tags/tag_base.asp&quot;</span>&gt;</span>base标签讲解<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><span class="hljs-comment">&lt;!--点击打开的是https://www.w3school.com.cn/tags/tag_base.asp 这个网站--&gt;</span><br><span class="hljs-comment">&lt;!--且为在新窗口打开--&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h1 id="meta元素"><a class="markdownIt-Anchor" href="#meta元素"></a> &lt;meta&gt;元素</h1><p>&lt;meta&gt; 元素可提供有关页面的元信息.</p><p>&lt;meta&gt; 标签的属性定义了与文档相关联的<strong>名称/值对</strong>。</p><p>举例来说，&lt;meta http-equiv=“charset” content=“iso-8859-1”&gt;中，http-equiv属性指定了<strong>名称charset</strong>，content属性（<strong>必须要和name 属性或 http-equiv 属性一起使用</strong>）指定了<strong>值iso-8859-1</strong>。之后，服务器将把名称/值对添加到发送给浏览器的内容头部，这样发送到浏览器的头部就应该包含：</p><blockquote><p>charset:iso-8859-1</p></blockquote><h2 id="相关属性"><a class="markdownIt-Anchor" href="#相关属性"></a> 相关属性</h2><p><strong>以下表格截图来自w3school</strong></p><p><img src="/img/html_head1.png" alt="meta元素相关属性一览表" /></p><h3 id="http-equiv属性"><a class="markdownIt-Anchor" href="#http-equiv属性"></a> http-equiv属性</h3><p><img src="/img/html_head2.png" alt="http-equiv属性值一览表" /></p><h3 id="meta标签的name属性"><a class="markdownIt-Anchor" href="#meta标签的name属性"></a> &lt;meta&gt;标签的name属性</h3><p><img src="/img/html_head3.png" alt="&lt;meta&gt;标签的name属性值一览表" /></p><h2 id="代码实例"><a class="markdownIt-Anchor" href="#代码实例"></a> 代码实例</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">HTML</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;Content-Type&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;text/html&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;Refresh&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;5;url=http://www.bilibili.com&quot;</span>/&gt;</span><br><br><span class="hljs-comment">&lt;!--注意上面例子演示了在网址已经变更的情况下，将用户重定向到另外一个地址。--&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;author&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;lyt&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;description&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;example&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;keywords&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;HTML&quot;</span>&gt;</span><br>    <br><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>演示<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>对不起。我们已经搬家了。<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>您将在 5 秒内被重定向到新的地址。<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-comment">&lt;!--即打开b站网页--&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>HTML</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HTML类</title>
    <link href="/2022/07/04/HTML%E7%B1%BB/"/>
    <url>/2022/07/04/HTML%E7%B1%BB/</url>
    
    <content type="html"><![CDATA[<h1 id="类"><a class="markdownIt-Anchor" href="#类"></a> 类</h1><p>对 HTML 进行分类（设置类），使我们能够为元素的类定义 CSS 样式。</p><p>为相同的类设置相同的样式，或者为不同的类设置不同的样式。</p><p><strong>大白话：把多个属性和属性值打包成的包裹可以作为（指定元素）的类</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs HTML"><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-xml"></span><br><span class="language-xml"><span class="hljs-comment">&lt;!--不要以数字为开头命名类--&gt;</span></span><br><span class="language-xml">.example1&#123;  </span><br><span class="language-xml">color:blue;</span><br><span class="language-xml">&#125;  <span class="hljs-comment">&lt;!--这个类可以给所有能用class属性的元素使用--&gt;</span></span><br><span class="language-xml">h1.example2&#123;  </span><br><span class="language-xml">text-align:center;</span><br><span class="language-xml">&#125;  <span class="hljs-comment">&lt;!--这个类只可以给h1使用，且不是h1就默认生效的--&gt;</span></span><br><span class="language-xml">.note&#123;</span><br><span class="language-xml">background-color:black;</span><br><span class="language-xml">color:white;</span><br><span class="language-xml">&#125;</span><br><span class="language-xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="class属性"><a class="markdownIt-Anchor" href="#class属性"></a> class属性</h2><p>class 属性规定元素的类名（classname）。</p><p>可以给 HTML 元素赋予多个 class，例如：&lt;element class=“value1 value2”&gt;。这么做可以把若干个 CSS 类合并到一个 HTML 元素。</p><p>class 属性不能在以下 HTML 元素中使用：base, head, html, meta, param, script, style 以及 title。</p><p><strong>大白话：用在元素（标签）里面，使用类</strong></p><p>此处使用的类见上面的示例代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs HTML"><span class="hljs-tag">&lt;<span class="hljs-name">h1</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;example1 example2&quot;</span>&gt;</span>A HEADER<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;example1&quot;</span>&gt;</span>hello world<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="div元素"><a class="markdownIt-Anchor" href="#div元素"></a> &lt;div&gt;元素</h3><p>&lt;div&gt; 可定义文档中的分区或节（division/section）,把文档分割为独立的、不同的部分，一种添加结构的通用机制。浏览器会在前后放置一个换行符<br />[[HTML  div元素]]</p><h3 id="span元素"><a class="markdownIt-Anchor" href="#span元素"></a> &lt;span&gt;元素</h3><p>&lt;span&gt; 元素是行内元素，能够用作文本的容器。</p><p>设置 &lt;span&gt; 元素的类，能够为相同的 &lt;span&gt; 元素设置相同的样式。</p><h1 id="完整的示例代码"><a class="markdownIt-Anchor" href="#完整的示例代码"></a> 完整的示例代码</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><code class="hljs HTML"><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Document<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css"></span><br><span class="language-css">    <span class="hljs-selector-tag">span</span><span class="hljs-selector-class">.important</span>&#123;</span><br><span class="language-css"></span><br><span class="language-css">        <span class="hljs-attribute">color</span>:palevioletred;</span><br><span class="language-css"></span><br><span class="language-css">        <span class="hljs-attribute">font-weight</span>: bold;</span><br><span class="language-css"></span><br><span class="language-css">    &#125;</span><br><span class="language-css"></span><br><span class="language-css">    <span class="hljs-selector-tag">h1</span><span class="hljs-selector-class">.header</span>&#123;</span><br><span class="language-css"></span><br><span class="language-css">        <span class="hljs-attribute">color</span>:gold;</span><br><span class="language-css"></span><br><span class="language-css">        <span class="hljs-attribute">text-align</span>:center;</span><br><span class="language-css"></span><br><span class="language-css">    &#125;</span><br><span class="language-css"></span><br><span class="language-css">    <span class="hljs-selector-class">.note</span>&#123;</span><br><span class="language-css"></span><br><span class="language-css">        <span class="hljs-attribute">background-color</span>:black;</span><br><span class="language-css"></span><br><span class="language-css">        <span class="hljs-attribute">color</span>:white;</span><br><span class="language-css"></span><br><span class="language-css">        <span class="hljs-attribute">margin</span>:<span class="hljs-number">50px</span>;</span><br><span class="language-css"></span><br><span class="language-css">        <span class="hljs-attribute">padding</span>:<span class="hljs-number">40px</span>;</span><br><span class="language-css"></span><br><span class="language-css">        <span class="hljs-attribute">font-size</span>:<span class="hljs-number">20px</span>;</span><br><span class="language-css"></span><br><span class="language-css">    &#125;</span><br><span class="language-css"></span><br><span class="language-css">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">h1</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;header&quot;</span>&gt;</span>example<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;note&quot;</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;important&quot;</span>&gt;</span>静夜思<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">pre</span>&gt;</span><br><br>床前明月光,<br><br>疑是地上霜。<br><br>举头望明月,<br><br>低头思故乡。<br><br><span class="hljs-tag">&lt;/<span class="hljs-name">pre</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;note&quot;</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;important&quot;</span>&gt;</span>绝句<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">pre</span>&gt;</span><br><br>两个黄鹂鸣翠柳，<br><br>一行白鹭上青天。<br><br>窗含西岭千秋雪，<br><br>门泊东吴万里船。<br><br><span class="hljs-tag">&lt;/<span class="hljs-name">pre</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="/img/html_%E7%B1%BB.png" alt="演示结果" /></p><ul><li>这样就很清晰地看得到div的模块化作用了</li><li>请注意代码中span的使用。span元素的内容变成了指定的类，起到了更改样式的作用。</li></ul><h1 id="后记"><a class="markdownIt-Anchor" href="#后记"></a> 后记</h1><ul><li>看不懂的概念解释就改一改讲解的示例代码，增添之后观察变化，有利于理解</li><li>学这一部分的时候会遇到很多包含了css的例子，所以可以先了解css的定义和基础语法</li><li>调节margin，padding实在是太难了，没啥概念一开始，弄得太丑了！希望后续有模板来提升qaq</li><li>今天看了一些关于前端的shi山吐槽，我感觉我写的代码也好乱（哭哭）赶紧看代码规范：<a href="https://www.runoob.com/html/html5-syntax.html">HTML(5) 代码规范 | 菜鸟教程</a></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>HTML</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>只用HTML也可以写出满足普通需要的”花“表格</title>
    <link href="/2022/07/03/HTML%E8%A1%A8%E6%A0%BC/"/>
    <url>/2022/07/03/HTML%E8%A1%A8%E6%A0%BC/</url>
    
    <content type="html"><![CDATA[<h1 id="表格相关标签"><a class="markdownIt-Anchor" href="#表格相关标签"></a> 表格相关标签</h1><h2 id="table-tr-tdth"><a class="markdownIt-Anchor" href="#table-tr-tdth"></a> &lt;table&gt; &lt;tr&gt; &lt;td&gt;&lt;th&gt;</h2><p>这四个是构成表格的最基础标签。<br />&lt;table&gt;定义一个表格，&lt;tr&gt;定义行，&lt;td&gt;定义单元格（table data），&lt;th&gt;代表表头。<br />数据单元格可以包含文本、图片、列表、段落、表单、水平线、表格等等。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs HTML"><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>演示<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">table</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span>  <br><span class="hljs-comment">&lt;!--这样添加的是水平表头，如果要添加垂直的，就可以如下注释一样（本质是当做一个单元格--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>第一列<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>第二列<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-comment">&lt;!--  &lt;th&gt;第一行&lt;/th&gt;  --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>1,1<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>1,2<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>2,1<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>2,2<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="/img/html_table1.png" alt="最朴素的表格" /></p><p>这个表格太丑了！也不方便阅读！接下来有很多属性来优化</p><h1 id="表格相关属性"><a class="markdownIt-Anchor" href="#表格相关属性"></a> 表格相关属性</h1><ul><li>width 单元格宽度</li><li>hight 单元格高度</li><li>border 边框类型</li><li>align 排列单元格内容</li><li>cell padding 创建单元格内容与其边框之间的空白</li><li>cell spacing 增加单元格之间的距离</li><li>caption 标题</li><li>colspan 单元格跨行数</li><li>rowspan 单元格跨列数</li></ul><h2 id="代码示例"><a class="markdownIt-Anchor" href="#代码示例"></a> 代码示例</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs HTML"><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Document<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">table</span> <span class="hljs-attr">border</span>=<span class="hljs-string">&quot;1&quot;</span> <span class="hljs-attr">cellspacing</span>=<span class="hljs-string">&quot;10&quot;</span> <span class="hljs-attr">cellpadding</span>=<span class="hljs-string">&quot;20&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;800&quot;</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">caption</span>&gt;</span>示例表格<span class="hljs-tag">&lt;/<span class="hljs-name">caption</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br><br>            <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span><span class="hljs-symbol">&amp;nbsp;</span><span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>  <span class="hljs-comment">&lt;!--&amp;nbsp处理没有内容的单元格--&gt;</span><br><br>            <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>第一列<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br><br>            <span class="hljs-tag">&lt;<span class="hljs-name">th</span> <span class="hljs-attr">colspan</span>=<span class="hljs-string">&quot;2&quot;</span>&gt;</span>这是一个跨列的单元格<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br><br>            <span class="hljs-tag">&lt;<span class="hljs-name">th</span> <span class="hljs-attr">rowspan</span>=<span class="hljs-string">&quot;2&quot;</span>&gt;</span>这是一个跨行的单元格<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br><br>            <span class="hljs-tag">&lt;<span class="hljs-name">td</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background-color: pink;&quot;</span> <span class="hljs-attr">align</span>=<span class="hljs-string">&quot;right&quot;</span>&gt;</span>靠右了<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br><br>            <span class="hljs-comment">&lt;!--但是示例中靠右也没有顶到表边，因为一开始设置了cellpadding--&gt;</span><br><br>            <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>单元格还可以包含列表<br><br>                <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span>  <span class="hljs-comment">&lt;!--有序列表始于ol标签--&gt;</span><br><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>无序列表1<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>无序列表2<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br><br>            <span class="hljs-tag">&lt;<span class="hljs-name">td</span> <span class="hljs-attr">align</span>=<span class="hljs-string">&quot;left&quot;</span>&gt;</span>靠左了<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br><br>            <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;http:www.bilibili.com&quot;</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;_blank&quot;</span>&gt;</span>b站链接<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>(这次示例代码缩进这么整齐是因为我用vsc写而不是notepad++了哈哈哈)</p><p>效果：<br /><img src="/img/html_table2.png" alt="用了很多属性后的表格" /></p><h1 id="写在最后"><a class="markdownIt-Anchor" href="#写在最后"></a> 写在最后</h1><ol><li>html真的挺细碎的，一定要自己写一写</li><li>vsc写真的比notepad++爽，关闭标签会自动补齐，还有缩进。但是一开始用notepad++直接手打会养成关标签的好习惯，以及因为要自己打缩进，所以能更理解程序内部的嵌套逻辑</li><li>每天坚持打卡是很好的进步！就是学得太慢啦！！加油！</li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>HTML</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HTML链接（锚）</title>
    <link href="/2022/07/02/HTML%E9%93%BE%E6%8E%A5%20%EF%BC%88%E9%94%9A%EF%BC%89/"/>
    <url>/2022/07/02/HTML%E9%93%BE%E6%8E%A5%20%EF%BC%88%E9%94%9A%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h1 id="锚"><a class="markdownIt-Anchor" href="#锚"></a> 锚</h1><p>使用&lt;a&gt;标记</p><p><strong>有两种使用 &lt;a&gt; 标签的方式：</strong></p><ol><li>通过使用 href 属性 - 创建指向另一个文档的链接</li><li>通过使用 name 属性 - 创建文档内的书签</li></ol><p>这样说有点抽象，还是在几种实际应用中理解<strong>创建链接</strong>和<strong>创建书签</strong>的含义吧！</p><h2 id="实现网页之间跳转"><a class="markdownIt-Anchor" href="#实现网页之间跳转"></a> 实现网页之间跳转</h2><h3 id="代码示例"><a class="markdownIt-Anchor" href="#代码示例"></a> 代码示例</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs HTML"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://www.bilibili.com&quot;</span>&gt;</span>b站主页面<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br></code></pre></td></tr></table></figure><p>戳一戳下面试试~（如果不行就按ctrl然后鼠标点）<br /><a href="https://www.bilibili.com">b站主页面</a></p><h2 id="实现同一页面内跳转"><a class="markdownIt-Anchor" href="#实现同一页面内跳转"></a> 实现同一页面内跳转</h2><h3 id="解释说明"><a class="markdownIt-Anchor" href="#解释说明"></a> 解释说明</h3><p>可以理解为我们在用wps阅读pdf时加的标签，然后我们可以直接通过标签就跳转回原来那个地方了，不用疯狂滚动页面寻找。以下这个代码就是实现这样的功能。</p><ul><li>我们需要先在要在”目的地“处命名一个name（<strong>对锚进行命名，创建了一个书签</strong>）</li></ul><blockquote><p>&lt;a name=“here”&gt;111111111111111111111111111&lt;/a&gt;</p></blockquote><ul><li>然后再在”出发地“使用href发送请求，记得要在“目的地”名字前面加#号（<strong>创建指向该锚的链接</strong>)</li></ul><blockquote><p>&lt;a href=&quot;#here&quot;&gt;我以为你不会出现&lt;/a&gt;</p></blockquote><p>使用属性name用于创建一个命名的锚，锚的名称可以是用你喜欢的名字</p><h3 id="代码示例-2"><a class="markdownIt-Anchor" href="#代码示例-2"></a> 代码示例</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!--文字内容来自告五人歌曲《我以为你不会出现》--&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>演示<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">pre</span>&gt;</span><br>我以为你不会出现 在这虚伪的世界<br><br>我以为你不会出现 在时间静止的昨天<br><br><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;here&quot;</span>&gt;</span>111111111111111111111111111<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span> <br><br>清晨午夜有了区别 不再是黑夜到白天<br><br>「太过美丽，以为一切是幻觉」<br><br>海市蜃楼颠倒知觉 一并颠覆我的意念<br><br>请带走我 飞过无人的沙漠<br><br>别在我的心中 反复驻足又走<br><br>请带着我 离开没有你的绿洲<br><br>不要让我独自 安稳地生活<br><br>我想要你在明天 睁开眼就在身边<br><br>清晨午夜有了区别 不再是黑夜到白天<br><br>「太过美丽，以为一切是幻觉」<br><br>海市蜃楼颠倒知觉 一并颠覆我的意念<br><br>请带走我 飞过无人的沙漠<br><br>别在我的心中 反复驻足又走<br><br>请带着我 离开没有你的绿洲<br><br>不要让我独自 安稳地生活<br><br>请告诉我 在你眼神里的线索<br><br>我想我也能够 把未知当承诺<br><br>你的执着 是我跳动的脉搏<br><br>在我不断催促 脚步的时候<br><br><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#here&quot;</span>&gt;</span>我以为你不会出现<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">pre</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>用浏览器打开：</p><p><img src="/img/html_a1.png" alt="href处" /></p><p>点击后到文档：</p><p><img src="/img/html_a2.png" alt="name处" /></p><h3 id="实际应用"><a class="markdownIt-Anchor" href="#实际应用"></a> 实际应用</h3><p>百度词条文件最开头的章节导航。<br />事实上，命名锚经常用于大型文档开始位置上创建目录。可以为每个章节赋予一个命名锚，然后把链接到这些锚的链接放到文档的上部。</p><h2 id="实现不同页面之间跳转"><a class="markdownIt-Anchor" href="#实现不同页面之间跳转"></a> 实现不同页面之间跳转</h2><h3 id="解释说明-2"><a class="markdownIt-Anchor" href="#解释说明-2"></a> 解释说明</h3><p>道理和同页面内跳转一样</p><h3 id="代码示例-3"><a class="markdownIt-Anchor" href="#代码示例-3"></a> 代码示例</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!--这是页面1的代码--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>演示<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;./new.html#tips&quot;</span>&gt;</span>想从演示1跳到演示2<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><span class="hljs-comment">&lt;!--我这里使用了相对地址跳转到演示2这个html--&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><hr /><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs HTML"><span class="hljs-comment">&lt;!--这是页面2的代码--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>演示2<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>这里是演示2<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;tips&quot;</span>&gt;</span>已跳转到演示2<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>用浏览器打开演示1：<br /><img src="/img/html_a3.png" alt="演示1" /></p><p>点击后：<br /><img src="/img/html_a4.png" alt="点击演示1中链接后效果" /></p><h3 id="在新页面中打开"><a class="markdownIt-Anchor" href="#在新页面中打开"></a> 在新页面中打开</h3><p>如果想要在新页面中打开，要使用target属性，将target属性设置为&quot;_blank&quot;</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs HTML"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;http://www.bilibili.com/&quot;</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;_blank&quot;</span>&gt;</span>打开b站<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="使用一个图像做链接"><a class="markdownIt-Anchor" href="#使用一个图像做链接"></a> 使用一个图像做链接</h2><h3 id="解释说明-3"><a class="markdownIt-Anchor" href="#解释说明-3"></a> 解释说明</h3><p>比如说想用一个图像作为按钮，按了之后跳转到一个新链接</p><h3 id="代码示例-4"><a class="markdownIt-Anchor" href="#代码示例-4"></a> 代码示例</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs HTML"><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/example/html/lastpage.html&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">border</span>=<span class="hljs-string">&quot;0&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/i/eg_buttonnext.gif&quot;</span> /&gt;</span><br><span class="hljs-comment">&lt;!--href后面跟着的是要跳转到的页面，第二个尖括号里面是图像链接按钮--&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>此代码借鉴：<br /><a href="https://www.w3school.com.cn/tiy/t.asp?f=eg_html_imglink">图片做链接示例</a></p><p>展示结果请点击网址查看</p><h1 id="最后一点念念叨叨"><a class="markdownIt-Anchor" href="#最后一点念念叨叨"></a> 最后一点念念叨叨</h1><ol><li><p>href不要打成herf，太痛了！</p></li><li><p>假如浏览器找不到已定义的命名锚，那么就会定位到文档的顶端。不会有错误发生。</p></li><li><p>事实上，href属性后的名称是url地址栏，如果接http就是我们常说的网页，但事实上它还可以跟别的内容来打开app等。例如：<br />使用邮件客户端发邮件</p></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;mailto:someone@microsoft.com?subject=Hello%20again&quot;</span>&gt;</span>发送邮件<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br></code></pre></td></tr></table></figure><p>打开微信 （ios）:</p> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;weixin:&quot;</span>&gt;</span>点击打开微信<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br></code></pre></td></tr></table></figure><p>这其实是<strong>URL Scheme</strong>的使用，这是一种页面内跳转协议，通过scheme协议，服务器可以定制化告诉App跳转那个页面，可以通过通知栏消息定制化跳转页面，可以通过H5页面跳转页面等。</p><p>客户端应用可以向操作系统注册一个 URL scheme，该 scheme 用于从浏览器或其他应用中启动本应用。通过指定的 URL 字段，可以让应用在被调起后直接打开某些特定页面，比如商品详情页、活动详情页等等。也可以执行某些指定动作，如完成支付等。也可以在应用内通过 html 页来直接调用显示 app 内的某个页面。综上URL Scheme使用场景大致分以下几种：</p><ul><li>服务器下发跳转路径，客户端根据服务器下发跳转路径跳转相应的页面</li><li>H5页面点击锚点，根据锚点具体跳转路径APP端跳转具体的页面</li><li>APP端收到服务器端下发的PUSH通知栏消息，根据消息的点击跳转路径跳转相关页面</li><li>APP根据URL跳转到另外一个APP指定页面</li></ul><p>具体请参考：<a href="https://blog.csdn.net/qq_41716624/article/details/96000817">安卓URL Scheme</a> <a href="https://cloud.tencent.com/developer/article/1081438">IOS URL Scheme</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>HTML</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HTML属性</title>
    <link href="/2022/07/01/HTML%E5%B1%9E%E6%80%A7/"/>
    <url>/2022/07/01/HTML%E5%B1%9E%E6%80%A7/</url>
    
    <content type="html"><![CDATA[<h2 id="概念"><a class="markdownIt-Anchor" href="#概念"></a> 概念</h2><ul><li><p>HTML 标签可以拥有属性。属性提供了有关 HTML 元素的更多的信息。</p></li><li><p>属性总是以名称/值对的形式出现，比如：<em>name=“value”</em>。</p></li><li><p>属性总是在 HTML 元素的开始标签中规定。</p></li><li><p>属性值应该始终被包括在引号内。双引号是最常用的，不过使用单引号也没有问题。在某些个别的情况下，比如属性值本身就含有双引号，那么必须使用单引号，例如：name=‘Bill “HelloWorld” Gates’</p></li></ul><p><strong>例：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">herf</span>=<span class="hljs-string">&quot;http://www.w3school.com.cn&quot;</span>&gt;</span>这里是一个链接，后面跟着链接说明<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><span class="hljs-comment">&lt;!--HTML 链接由 &lt;a&gt; 标签定义。链接的地址在 href 属性中指定--&gt;</span><br></code></pre></td></tr></table></figure><h2 id="全局属性"><a class="markdownIt-Anchor" href="#全局属性"></a> 全局属性</h2><p>全局属性是可与所有 HTML 元素一起使用的属性。<br />具体内容网址如下：<br /><a href="https://www.w3school.com.cn/tags/html_ref_standardattributes.asp">HTML 全局属性 (w3school.com.cn)</a></p><h2 id="style属性样式"><a class="markdownIt-Anchor" href="#style属性样式"></a> style属性（样式）</h2><p>style属性提供了一种<strong>直接</strong>改变<strong>所有html元素</strong>的样式的通用方法。是一种全局属性。</p><p>另：CSS 是一种描述 HTML 文档样式的语言，描述应该如何显示 HTML 元素。使用CSS也可以实现以下功能。这里暂且介绍style属性来控制。</p><h3 id="背景颜色"><a class="markdownIt-Anchor" href="#背景颜色"></a> 背景颜色</h3><p>style=“background-color:yellow”</p><h3 id="文字的字体-颜色-尺寸"><a class="markdownIt-Anchor" href="#文字的字体-颜色-尺寸"></a> 文字的字体、颜色、尺寸</h3><p>字体  style=“font-family:verdana”<br />颜色  style=“color:red”<br />尺寸  style=“font-size:20px”<br />多个值之间用分号间隔</p><h3 id="文本对齐"><a class="markdownIt-Anchor" href="#文本对齐"></a> 文本对齐</h3><p>居中 sytle=“text-align:center”</p><h3 id="示例"><a class="markdownIt-Anchor" href="#示例"></a> 示例</h3><p>以下包含了一些文本格式化的标签，详见网站：<a href="https://www.w3school.com.cn/html/html_formatting.asp">HTML 文本格式化 (w3school.com.cn)</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs HTML"><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Ly是大猪<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">h1</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background-color:pink&quot;</span>&gt;</span>Ly是大猪<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">br</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">pre</span>&gt;</span>  <span class="hljs-comment">&lt;!--pre是预格式文本标签,他保留了空格和换行，很适合显示计算机代码--&gt;</span><br>Ly 是<br>猪猪<br>Ly  是 <span class="hljs-tag">&lt;<span class="hljs-name">strong</span>&gt;</span>最笨的<span class="hljs-tag">&lt;/<span class="hljs-name">strong</span>&gt;</span> 猪头!<br>for i=1 to 100000<br>print Ly_pig<br><span class="hljs-tag">&lt;/<span class="hljs-name">pre</span>&gt;</span>  <br><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>要好好 <span class="hljs-tag">&lt;<span class="hljs-name">del</span>&gt;</span>宠爱<span class="hljs-tag">&lt;/<span class="hljs-name">del</span>&gt;</span> 教训Ly<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>  <span class="hljs-comment">&lt;!--del标签是用于中划线--&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">i</span>&gt;</span>猪是Ly<span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span>  <span class="hljs-comment">&lt;!--斜体标签--&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>我都要不认识猪这个字了，<span class="hljs-tag">&lt;<span class="hljs-name">ins</span>&gt;</span>都怪Ly<span class="hljs-tag">&lt;/<span class="hljs-name">ins</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>  <span class="hljs-comment">&lt;!--ins下划线标签--&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;color:red;font-size:20px;&quot;</span>&gt;</span>鼠标放在下面的字上！<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-comment">&lt;!--多个style用分号分隔，最后一个名称后面也要有分号--&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">abbr</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;big pig&quot;</span>&gt;</span>Ly<span class="hljs-tag">&lt;/<span class="hljs-name">abbr</span>&gt;</span> <br><span class="hljs-comment">&lt;!--abbr显示缩写，当鼠标移到缩略词上时，title用于展示表达的完整版本--&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="/img/html_style.png" alt="样式及文本格式化示例结果" /></p><h2 id="其他念念叨叨"><a class="markdownIt-Anchor" href="#其他念念叨叨"></a> 其他念念叨叨</h2><p><small><del>Ly是谁，是一头猪，养在了友链</del></small></p><p><strong>html也可以用在写markdown中哦！能实现更多的样式~</strong></p><p><strong>style不要拼错成sytle！！！太痛了</strong></p>]]></content>
    
    
    
    <tags>
      
      <tag>HTML</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HTML基础元素</title>
    <link href="/2022/06/30/HTML%E5%9F%BA%E7%A1%80%E5%85%83%E7%B4%A0/"/>
    <url>/2022/06/30/HTML%E5%9F%BA%E7%A1%80%E5%85%83%E7%B4%A0/</url>
    
    <content type="html"><![CDATA[<p>HTML 元素指的是从开始标签（start tag）到结束标签（end tag）的所有代码。</p><p>编写时保证规范：不要忘记结束标签，关闭空元素，使用小写标签</p><h2 id="在实例中讲解"><a class="markdownIt-Anchor" href="#在实例中讲解"></a> 在实例中讲解</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span>  <span class="hljs-comment">&lt;!--&lt;html&gt;和&lt;/html&gt;之间的文本描述网页--&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span>  <span class="hljs-comment">&lt;!--所有头部元素的容器，描述了文档的各种属性和信息--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>文档标题<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span>  <span class="hljs-comment">&lt;!--&lt;body&gt;和&lt;/body&gt;之间的文本是可见的页面内容--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>一级标题<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">hr</span>/&gt;</span>  <span class="hljs-comment">&lt;!--这是水平分割线--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>一个段落<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-comment">&lt;!--默认情况下，HTML 会自动地在块级元素前后添加一个额外的空行，比如段落、标题元素前后。--&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">br</span>/&gt;</span>  <span class="hljs-comment">&lt;!--换行，/是关闭空元素的方法，与&lt;br&gt;相比,这样更加保险和规范--&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>以上代码运行效果截图：</p><p>此为标签页显示情况<br /><img src="/img/html%E5%9F%BA%E7%A1%80%E5%85%83%E7%B4%A0%E7%A4%BA%E4%BE%8B1.png" alt="html基础标签页" /></p><p>此为网页显示情况<br /><img src="/img/html%E5%9F%BA%E7%A1%80%E5%85%83%E7%B4%A0%E7%A4%BA%E4%BE%8B2.png" alt="html基础网页" /></p><p><strong>易错易漏：</strong></p><ul><li>漏掉头部元素</li><li>头部元素放于body之前</li><li>在notepad++里面写了html之后，文件保存后缀要改为html</li><li>当显示页面时，浏览器会<strong>移除源代码中多余的空格和空行</strong>。所有连续的空格或空行都会被算作一个空格。需要注意的是，HTML 代码中的所有连续的空行（换行）也被显示为一个空格。</li></ul><p><img src="/img/html%E6%AE%B5%E8%90%BD.png" alt="html段落处理" /></p>]]></content>
    
    
    
    <tags>
      
      <tag>HTML</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>小题笔记——农夫找牛c/c++</title>
    <link href="/2022/04/22/%E5%86%9C%E5%A4%AB%E6%89%BE%E7%89%9B/"/>
    <url>/2022/04/22/%E5%86%9C%E5%A4%AB%E6%89%BE%E7%89%9B/</url>
    
    <content type="html"><![CDATA[<p><mark>keyword：</mark><br />模拟<br />特征值</p><h1 id="题意"><a class="markdownIt-Anchor" href="#题意"></a> 题意：</h1><p>农夫需要在一张10*10的地图里抓牛。农夫和牛的移动规则相同：每次朝着原来的方向前进一格；如果前方是障碍物或者地图边界，那么本次顺时针旋转90°。初始方向向上。计算并输出农夫需要多少步才能抓到牛（二者在同一格相遇），<strong>永远不相遇则输出0</strong></p><p>•保证地图中只有一个F和一个C，且F和C一开始不会在同一个格子里<br />•如果农夫和牛在移动时穿过对方，但没有在同一格相遇，我们不认为他们相遇了</p><p><img src="/img/%E5%86%9C%E5%A4%AB%E6%89%BE%E7%89%9B.jpg" alt="题意解释图" /></p><h1 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路：</h1><ol><li><p>本题是一道典型的模拟题（也是常见的地图题），是很常见的用结构体记录横纵坐标以及下一步方向的方法。<strong>但是本来不会啊qaq所以还是要记下来</strong></p><ul><li>注：通常以第一个点为原点，向右向下建立坐标轴</li></ul></li><li><p>由于牛和农夫行走方式相同，写一个子函数实现行走/遇到障碍物转向的功能，传递结构体，返回值也是结构体</p></li><li><p>本题的特殊点在于<mark>如何判断永远不会相遇</mark>：</p><ul><li>不会相遇的情况：农夫在A<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>y</mi><mn>1</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x_1,y_1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，方向d1，牛在B<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>y</mi><mn>2</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x_2,y_2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，方向d2，而之前出现过一个时刻与这情况完全相同</li><li>模拟方法：<strong>用特征值记录</strong>: 这里一共有六个值要记录，且均为个位数，则合在一起是一个六位数。如A(1,2) , d1=0, B(3,4), d2=1， 则special=120341。知道每个位数是多少，乘10的具体倍数就能得到special了。</li></ul></li></ol><h1 id="code"><a class="markdownIt-Anchor" href="#code"></a> Code</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">Data</span><br><br>&#123;<br><br>    <span class="hljs-type">int</span> x;<br><br>    <span class="hljs-type">int</span> y;<br><br>    <span class="hljs-type">int</span> d; <span class="hljs-comment">//朝向，0~3：上右下左（顺时针）</span><br><br>&#125; farmer, cow;<br><br><span class="hljs-comment">//地图是以向右为x轴正方向，向下为y轴正方向</span><br><br><span class="hljs-type">char</span> g[<span class="hljs-number">15</span>][<span class="hljs-number">15</span>];     <span class="hljs-comment">// 地图grid</span><br><br><span class="hljs-type">bool</span> book[<span class="hljs-number">1000010</span>]; <span class="hljs-comment">//标记特征值</span><br><br>  <br><br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">Data</span> <span class="hljs-built_in">fun</span>(<span class="hljs-keyword">struct</span> Data p) <span class="hljs-comment">//处理转向</span><br><br>&#123;<br><br>    <span class="hljs-keyword">if</span> (p.d == <span class="hljs-number">0</span>)<br><br>    &#123;<br><br>        <span class="hljs-keyword">if</span> (p.y - <span class="hljs-number">1</span> &gt; <span class="hljs-number">0</span> &amp;&amp; g[p.y - <span class="hljs-number">1</span>][p.x] != <span class="hljs-string">&#x27;*&#x27;</span>)<span class="hljs-comment">//注意是&gt;不是&gt;=</span><br><br>            p.y--;<br><br>        <span class="hljs-keyword">else</span><br><br>            p.d = <span class="hljs-number">1</span>;<br><br>    &#125;<br><br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (p.d == <span class="hljs-number">1</span>)<br><br>    &#123;<br><br>        <span class="hljs-keyword">if</span> (p.x + <span class="hljs-number">1</span> &lt;= <span class="hljs-number">10</span> &amp;&amp; g[p.y][p.x + <span class="hljs-number">1</span>] != <span class="hljs-string">&#x27;*&#x27;</span>)<br><br>            p.x++;<br><br>        <span class="hljs-keyword">else</span><br><br>            p.d = <span class="hljs-number">2</span>;<br><br>    &#125;<br><br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (p.d == <span class="hljs-number">2</span>)<br><br>    &#123;<br><br>        <span class="hljs-keyword">if</span> (p.y + <span class="hljs-number">1</span> &lt;= <span class="hljs-number">10</span> &amp;&amp; g[p.y + <span class="hljs-number">1</span>][p.x] != <span class="hljs-string">&#x27;*&#x27;</span>)<br><br>            p.y++;<br><br>        <span class="hljs-keyword">else</span><br><br>            p.d = <span class="hljs-number">3</span>;<br><br>    &#125;<br><br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (p.d == <span class="hljs-number">3</span>)<br><br>    &#123;<br><br>        <span class="hljs-keyword">if</span> (p.x - <span class="hljs-number">1</span> &gt; <span class="hljs-number">0</span> &amp;&amp; g[p.y][p.x - <span class="hljs-number">1</span>] != <span class="hljs-string">&#x27;*&#x27;</span>)<br><br>            p.x--;<br><br>        <span class="hljs-keyword">else</span><br><br>            p.d = <span class="hljs-number">0</span>;<br><br>    &#125;<br><br>    <span class="hljs-keyword">return</span> p;<br><br>&#125;<br><br>  <br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span><br><span class="hljs-function"></span>&#123;<br><br>    <span class="hljs-type">bool</span> flag = <span class="hljs-literal">false</span>;<br><br>    <span class="hljs-type">int</span> cnt = <span class="hljs-number">0</span>;<br><br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= <span class="hljs-number">10</span>; i++)<span class="hljs-comment">//读入初始位置是（1,1）</span><br><br>    &#123;<br><br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%s&quot;</span>, g[i] + <span class="hljs-number">1</span>); <span class="hljs-comment">// 读入字符串，从下标1开始读入,按行迭代</span><br><br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = <span class="hljs-number">1</span>; j &lt;= <span class="hljs-number">10</span>; j++)<br><br>        &#123;<br><br>            <span class="hljs-keyword">if</span> (g[i][j] == <span class="hljs-string">&#x27;F&#x27;</span>)<br><br>                farmer = &#123;j, i, <span class="hljs-number">0</span>&#125;; <span class="hljs-comment">//写入结构体</span><br><br>            <span class="hljs-keyword">if</span> (g[i][j] == <span class="hljs-string">&#x27;C&#x27;</span>)<br><br>                cow = &#123;j, i, <span class="hljs-number">0</span>&#125;;<br><br>        &#125;<br><br>    &#125;<br><br>    <span class="hljs-keyword">while</span> (<span class="hljs-number">1</span>)<br><br>    &#123;<br><br>        <span class="hljs-keyword">if</span> (farmer.x == cow.x &amp;&amp; farmer.y == cow.y)<br><br>        &#123;<br><br>            flag = <span class="hljs-literal">true</span>;<br><br>            <span class="hljs-keyword">break</span>;<br><br>        &#125;<br><br>  <br><br>        <span class="hljs-type">int</span> special; <span class="hljs-comment">//特征值</span><br><br>        special = (farmer.x - <span class="hljs-number">1</span>) + (farmer.y - <span class="hljs-number">1</span>) * <span class="hljs-number">10</span> + farmer.d * <span class="hljs-number">100</span> + (cow.x - <span class="hljs-number">1</span>) * <span class="hljs-number">1000</span> + (cow.y - <span class="hljs-number">1</span>) * <span class="hljs-number">10000</span> + cow.d * <span class="hljs-number">100000</span>;<br>        <span class="hljs-comment">//减去1的原因是我们地图是从1开始录入的，而最大横/纵坐标为10就是两位数了。</span><br>        <span class="hljs-comment">//减1保证是个位数，且不影响特征值特征性</span><br><br>        <span class="hljs-keyword">if</span> (book[special])<br><br>            <span class="hljs-keyword">break</span>;<br><br>        <span class="hljs-keyword">else</span><br><br>            book[special] = <span class="hljs-literal">true</span>;<br><br>  <br><br>        farmer = <span class="hljs-built_in">fun</span>(farmer);<br><br>        cow = <span class="hljs-built_in">fun</span>(cow);<br><br>        cnt++;<br><br>    &#125;<br><br>    <span class="hljs-keyword">if</span> (flag)<br><br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d&quot;</span>, cnt);<br><br>    <span class="hljs-keyword">else</span><br><br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;0\n&quot;</span>);<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br><br>&#125;<br></code></pre></td></tr></table></figure><h1 id="小结"><a class="markdownIt-Anchor" href="#小结"></a> 小结</h1><ol><li>在地图的细节处容易出错</li><li>学习了特征值在模拟中的作用</li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>小题笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>小题笔记——求排列中的稳定数个数c/c++</title>
    <link href="/2022/04/22/%E7%A8%B3%E5%AE%9A%E6%95%B0/"/>
    <url>/2022/04/22/%E7%A8%B3%E5%AE%9A%E6%95%B0/</url>
    
    <content type="html"><![CDATA[<p><mark>key words：</mark><br />动态规划<br />递推算法</p><h3 id="题目描述"><a class="markdownIt-Anchor" href="#题目描述"></a> 题目描述</h3><p><strong>对自然数1…n，求其全排列中有多少种排列P满足恰好有m个位置Pi&gt;i。</strong></p><h3 id="输入数据"><a class="markdownIt-Anchor" href="#输入数据"></a> 输入数据</h3><p>共一行，两个正整数n(1≤n≤100)，m(1≤m≤n )。</p><h3 id="输出数据"><a class="markdownIt-Anchor" href="#输出数据"></a> 输出数据</h3><p>一个整数，满足条件的排列数，需对1e9+7取模后输出</p><h3 id="说明"><a class="markdownIt-Anchor" href="#说明"></a> 说明</h3><p>1到5的排列P:5，4，3，2，1有2个位置P1，P2满足Pi&gt;i。</p><h3 id="分析"><a class="markdownIt-Anchor" href="#分析"></a> 分析：</h3><p>想办法将题意含有的数字表示出来。</p><h5 id="对状态转移方程做一些阐述"><a class="markdownIt-Anchor" href="#对状态转移方程做一些阐述"></a> 对状态转移方程做一些阐述：</h5><p><strong>D[n][m]表示从i的全排列中有j个位置满足值大于下标。</strong></p><p>那么状态转移方程为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi><mo stretchy="false">[</mo><mi>n</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>m</mi><mo stretchy="false">]</mo><mo>=</mo><mi>D</mi><mo stretchy="false">[</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>m</mi><mo stretchy="false">]</mo><mo>∗</mo><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mi>m</mi><mo stretchy="false">)</mo><mo>+</mo><mi>D</mi><mo stretchy="false">[</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo>∗</mo><mo stretchy="false">[</mo><mi>m</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">D[n][m]=D[n-1][m]*(1+m)+D[n-1]*[m-1](n-m)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mopen">[</span><span class="mord mathdefault">n</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathdefault">m</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mopen">[</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathdefault">m</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mopen">[</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mclose">)</span></span></span></span></span></p><h6 id="对每一项进行分析"><a class="markdownIt-Anchor" href="#对每一项进行分析"></a> 对每一项进行分析：</h6><ul><li>第一项：前面n-1项已经满足了有m个稳定数的要求了，那么第n个数可以就放在n位，或者和前面m个稳定数中的任何一个（如k）交换</li><li>第二项：前面n-1项不满足要求，需要将n与某个非稳定的k交换才可以，而这样的操作能增加一个稳定数，故前面n-1共有m-1个稳定数。k有(n-1-(m-1))种选择。</li></ul><p><img src="/img/exchange.jpg" alt="讲解图" /></p><h6 id="初始条件"><a class="markdownIt-Anchor" href="#初始条件"></a> 初始条件：</h6><ul><li>m==0的时候只有一种情况，即按顺序。故D[i][0]==1</li><li>m==n-1的时候只有一种情况，即1放在最尾，其它依次前移。故D[i][i-1]==1</li><li>用循环赋予初值</li></ul><h6 id="输出"><a class="markdownIt-Anchor" href="#输出"></a> 输出：</h6><p>D中储存的就是答案了，直接输出即可</p><h5 id="code"><a class="markdownIt-Anchor" href="#code"></a> Code：</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-type">long</span> <span class="hljs-type">long</span> D[<span class="hljs-number">102</span>][<span class="hljs-number">102</span>];<br><br><span class="hljs-type">const</span> <span class="hljs-type">long</span> <span class="hljs-type">long</span> mod=<span class="hljs-number">1e9</span>+<span class="hljs-number">7</span>;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><br> <span class="hljs-type">long</span> <span class="hljs-type">long</span> n,m;<br><br> cin&gt;&gt;n&gt;&gt;m;<br><br> <span class="hljs-keyword">for</span>(<span class="hljs-type">long</span> <span class="hljs-type">long</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br><br> D[i][<span class="hljs-number">0</span>]=<span class="hljs-number">1</span>;<span class="hljs-comment">//一个稳定数都没有，只有可能顺排</span><br><br> D[i][i<span class="hljs-number">-1</span>]=<span class="hljs-number">1</span>;<br><br> <span class="hljs-comment">//只有一个不是稳定数，只有可能1放在最尾，其他依次往前一个</span><br><br> &#125;<br><br> <span class="hljs-keyword">for</span>(<span class="hljs-type">long</span> <span class="hljs-type">long</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br><br> <span class="hljs-keyword">for</span>(<span class="hljs-type">long</span> <span class="hljs-type">long</span> m=<span class="hljs-number">1</span>;m&lt;=i<span class="hljs-number">-2</span>;m++)<span class="hljs-comment">//i个数，最多i-1个稳定数，但i-1算了，只需要i-2开始</span><br><br> D[i][m]=((D[i<span class="hljs-number">-1</span>][m]+D[i<span class="hljs-number">-1</span>][m]*m)%mod+(D[i<span class="hljs-number">-1</span>][m<span class="hljs-number">-1</span>]*(i-m))%mod)%mod;<br><br> cout&lt;&lt;D[n][m];<br><br> <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br><br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>小题笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>小题笔记——走方格c/c++</title>
    <link href="/2022/04/22/%E8%B5%B0%E6%96%B9%E6%A0%BC/"/>
    <url>/2022/04/22/%E8%B5%B0%E6%96%B9%E6%A0%BC/</url>
    
    <content type="html"><![CDATA[<p><mark>keyword：</mark><br />模拟、数学规律</p><p><em>（但是这个题用模拟不对）</em></p><h1 id="题意"><a class="markdownIt-Anchor" href="#题意"></a> 题意</h1><p>从点<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>y</mi><mn>1</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x_1,y_1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>走到<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>y</mi><mn>2</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x_2,y_2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>点(均是整数)，每步能走一个单位长度，只能沿平行于坐标轴的方向运动，每走一步需要向左或向右旋转90°，求最少需要走多少步。<br />所有坐标满足−10000≤x,y≤10000.</p><h1 id="分析"><a class="markdownIt-Anchor" href="#分析"></a> 分析</h1><p><img src="/img/%E8%B5%B0%E6%A0%BC%E5%AD%90.jpg" alt="示例" /></p><ul><li>移动过程可以分为两个部分：<ul><li>未到达与C点横平或者竖直的时候：由于每走一步都要拐弯，所以可以等效为直接45°走。则走的步数就是B点的横/纵坐标-A点的横/纵坐标，求绝对值之和cnt。</li><li>到达与C横平或竖直的B点之后： 分类讨论（<strong>举例抓出奇偶性规律</strong>）（假设水平/竖直差为d)<ul><li>d为奇数：cnt+=2*d-1</li><li>d 为偶数：cnt+=2d</li></ul></li></ul></li></ul><p><strong>分类原因</strong>：见错误思路记录</p><h1 id="code"><a class="markdownIt-Anchor" href="#code"></a> code</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><br><span class="hljs-keyword">typedef</span> <span class="hljs-type">long</span> <span class="hljs-type">long</span> ll;<br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">Data</span><br><br>&#123;<br><br>    <span class="hljs-type">int</span> a;<br><br>    <span class="hljs-type">int</span> b;<br><br>&#125; dot1, dot2;<br><br>ll t1, t2, ans, d,first;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span><br><span class="hljs-function"></span>&#123;<br><br>    cin &gt;&gt; dot1.a &gt;&gt; dot1.b &gt;&gt; dot2.a &gt;&gt; dot2.b;<br><br>    t1 = <span class="hljs-built_in">abs</span>(dot1.a - dot2.a);<br><br>    t2 = <span class="hljs-built_in">abs</span>(dot1.b - dot2.b);<br><br>    first = <span class="hljs-built_in">min</span>(t1, t2);<span class="hljs-comment">//横平竖直选一个短的走</span><br><br>    ans = first*<span class="hljs-number">2</span>;<br><br>    d = <span class="hljs-built_in">max</span>(t1, t2) - first;<br><br>    <span class="hljs-comment">//假设平齐了，其实是要减去已经走了的横坐标，但是因为是45°所以直接减first</span><br><br>    <span class="hljs-keyword">if</span>(d%<span class="hljs-number">2</span>==<span class="hljs-number">0</span>)<br><br>        ans += d * <span class="hljs-number">2</span>;<br><br>    <span class="hljs-keyword">else</span><br><br>        ans += d * <span class="hljs-number">2</span> - <span class="hljs-number">1</span>;<br><br>    cout &lt;&lt; ans &lt;&lt; endl;<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br><br>&#125;<br></code></pre></td></tr></table></figure><h1 id="错误记录"><a class="markdownIt-Anchor" href="#错误记录"></a> 错误记录</h1><p>本来采用了模拟的思路。第一步通过比较出发点和结束点的横纵坐标来确定。如果前一步是上下，则后一次是左右，具体左右根据所在点和结尾点的横坐标大小比较来确定。<br />这貌似没问题，当时也花了很多时间在找原因。其实从例图来看就知道，如果第一步走上，则不是最短的。走到B点会发现没法向右走。<br /><strong>即</strong>：当中途达到与结果点相平行或竖直的点处，如果间隔d是奇数，则下一步必须是朝着结果点方向的。而这就要求前一步必须与结果点方向垂直，不能是任意的。按原先的计算方式是可能实现不了这个特殊要求。</p><h1 id="小结"><a class="markdownIt-Anchor" href="#小结"></a> 小结</h1><ul><li>模拟确实是解决很多题的一个方式，但是归纳数学式子往往是更多算法题的思路。</li><li>可以通过将过程分段，设置特殊节点的方式，然后人工走程序的逻辑，来查出错误。（因为分段了，所以点可以拉的远一点，也不怕乱）</li><li>另外，在写笔记的时候弄错了插入图片的相对路径表达。使用…/表示返回上一级目录。./表示同级目录。</li><li>特别鸣谢npy提供例图</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>小题笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>python学习笔记</title>
    <link href="/2022/04/05/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <url>/2022/04/05/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<p>跟随课堂作业进度写的笔记，主要是自己需要用的。旁边有目录。</p><span id="more"></span><h2 id="对列表"><a class="markdownIt-Anchor" href="#对列表"></a> 对列表</h2><h3 id="set"><a class="markdownIt-Anchor" href="#set"></a> set()</h3><p>set()函数创建一个无序<strong>不重复</strong>元素集，可进行关系测试，删除重复数据，还可以计算交集、差集、并集等。</p><h3 id="add"><a class="markdownIt-Anchor" href="#add"></a> add()</h3><p>add() 方法用于给集合添加元素，<strong>如果添加的元素在集合中已存在，则不执行任何操作</strong>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> random <span class="hljs-keyword">import</span> randint<br><br>x = <span class="hljs-built_in">set</span>()<br><span class="hljs-keyword">while</span> <span class="hljs-built_in">len</span>(x)&lt;<span class="hljs-number">20</span>:<br>    x.add(randint(<span class="hljs-number">1</span>,<span class="hljs-number">100</span>))<br>    <span class="hljs-comment">#这样创建的就是没有重复量的了，很方便，不用自己再加判断</span><br><span class="hljs-built_in">print</span>(x)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">sorted</span>(x))<br><br></code></pre></td></tr></table></figure><h3 id="remove"><a class="markdownIt-Anchor" href="#remove"></a> remove()</h3><p>删除特定值，且删除的是第一个匹配项</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python">aList = [<span class="hljs-number">123</span>, <span class="hljs-string">&#x27;xyz&#x27;</span>, <span class="hljs-string">&#x27;zara&#x27;</span>, <span class="hljs-string">&#x27;abc&#x27;</span>, <span class="hljs-string">&#x27;xyz&#x27;</span>];<br><br>aList.remove(<span class="hljs-string">&#x27;xyz&#x27;</span>);<br><span class="hljs-built_in">print</span> <span class="hljs-string">&quot;List : &quot;</span>, aList;<br>aList.remove(<span class="hljs-string">&#x27;abc&#x27;</span>);<br><span class="hljs-built_in">print</span> <span class="hljs-string">&quot;List : &quot;</span>, aList;<br><br><span class="hljs-comment">#List :  [123, &#x27;zara&#x27;, &#x27;abc&#x27;, &#x27;xyz&#x27;]</span><br><span class="hljs-comment">#List :  [123, &#x27;zara&#x27;, &#x27;xyz&#x27;]</span><br></code></pre></td></tr></table></figure><h3 id="reverse"><a class="markdownIt-Anchor" href="#reverse"></a> reverse()</h3><p>用于反向列表中元素。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">aList = [<span class="hljs-number">123</span>, <span class="hljs-string">&#x27;xyz&#x27;</span>, <span class="hljs-string">&#x27;zara&#x27;</span>, <span class="hljs-string">&#x27;abc&#x27;</span>, <span class="hljs-string">&#x27;xyz&#x27;</span>]<br><br>aList.reverse()<span class="hljs-comment">#注意：不可以写成alist=alist.reverse()，这样得到的是返回值None</span><br><span class="hljs-built_in">print</span> (<span class="hljs-string">&quot;List : &quot;</span>, aList)<br><span class="hljs-comment">#结果：</span><br><span class="hljs-comment">#List :  [&#x27;xyz&#x27;, &#x27;abc&#x27;, &#x27;zara&#x27;, &#x27;xyz&#x27;, 123]</span><br></code></pre></td></tr></table></figure><hr /><h2 id="对字典"><a class="markdownIt-Anchor" href="#对字典"></a> 对字典</h2><h3 id="__contains__key"><a class="markdownIt-Anchor" href="#__contains__key"></a> __contains__(key)</h3><p>在判断一个字典dict是否包含某个键值item，可以使用的是if item in dict.keys():。而字典比较大的时候会出现耗时严重的情况，于是改成**if dict.__contains__(item)：**速度会变快很多。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">dict</span> = &#123;<span class="hljs-string">&#x27;Name&#x27;</span>:<span class="hljs-string">&#x27;coco&#x27;</span>,<span class="hljs-string">&#x27;Sex&#x27;</span>:<span class="hljs-string">&#x27;Female&#x27;</span>&#125;  <span class="hljs-comment"># 定义字典</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">dict</span>.__contains__(<span class="hljs-string">&#x27;Name&#x27;</span>))   <span class="hljs-comment"># True</span><br></code></pre></td></tr></table></figure><hr /><h2 id="itertools-模块"><a class="markdownIt-Anchor" href="#itertools-模块"></a> itertools 模块</h2><h3 id="cycle"><a class="markdownIt-Anchor" href="#cycle"></a> cycle()</h3><ul><li>函数仅接受一个参数作为输入，可以像列表，字符串，元组等</li><li>该函数返回<strong>迭代器对象类型</strong></li><li>在函数的实现中，返回类型为yield，它在不破坏局部变量的情况下挂起函数执行。由生成中间结果的生成器使用</li><li>它遍历输入自变量中的每个元素并产生它并<strong>重复循环</strong>，<strong>并产生一个无穷大的自变量序列</strong></li></ul><p>相关链接：<a href="https://blog.csdn.net/u013066730/article/details/114278749">【Python】Itertools.cycle()用法及代码示例</a></p><h3 id="compress"><a class="markdownIt-Anchor" href="#compress"></a> compress()</h3><p>此迭代器根据作为其他参数传递的布尔列表值有选择地从传递的容器中选择要打印的值。打印与布尔值true相对应的参数，否则将全部跳过。</p><p>在此，我们为函数提供两个参数。第一个参数将是迭代器，第二个参数将是选择器<code>True/1</code>或者<code>False/0</code>。如果第一个参数的对应选择器是<code>True</code>，则将打印相应的数据，然后我们将得到相应的输出。</p><p>格式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">compress(<span class="hljs-built_in">iter</span>, selector)<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">x = <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">20</span>)<br>y = (<span class="hljs-number">1</span>,<span class="hljs-number">0</span>)*<span class="hljs-number">9</span>+(<span class="hljs-number">1</span>,)<span class="hljs-comment">#*9代表着复制九次</span><br><span class="hljs-comment">#y打印出来是(1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1)</span><br><span class="hljs-built_in">list</span>(itertools.compress(x, y)) <br><span class="hljs-comment">#list打印出来是：[1, 3, 5, 7, 9, 11, 13, 15, 17, 19]</span><br></code></pre></td></tr></table></figure><h3 id="groupby"><a class="markdownIt-Anchor" href="#groupby"></a> groupby（）</h3><p>相关链接：<a href="https://blog.csdn.net/qq_38237214/article/details/111597534">itertools中的groupby()的原理及其操作</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> itertools<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">group</span>(<span class="hljs-params">v</span>):<br>    <span class="hljs-keyword">if</span> v&gt;<span class="hljs-number">10</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;greater than 10&#x27;</span><br>    <span class="hljs-keyword">elif</span> v&lt;<span class="hljs-number">5</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;less than 5&#x27;</span><br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;between 5 and 10&#x27;</span><br>x = <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">20</span>,<span class="hljs-number">3</span>)<br><span class="hljs-comment">#1,4,7,10,13,16,19</span><br>y = itertools.groupby(x, group)     <span class="hljs-comment">#根据函数返回值对序列元素进行分组</span><br><span class="hljs-keyword">for</span> k, v <span class="hljs-keyword">in</span> y:<br>    <span class="hljs-built_in">print</span>(k, <span class="hljs-string">&#x27;:&#x27;</span>, <span class="hljs-built_in">list</span>(v))<br><span class="hljs-comment">#k里面存的是group的返回值</span><br><span class="hljs-comment">#v存的是对应的x</span><br><span class="hljs-comment">#每提取一次，都是对新的值进行一次分类判断</span><br><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">结果：</span><br><span class="hljs-string">less than 5 : [1, 4]</span><br><span class="hljs-string">between 5 and 10 : [7, 10]    </span><br><span class="hljs-string">greater than 10 : [13, 16, 19]</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br></code></pre></td></tr></table></figure><hr /><h2 id="迭代器"><a class="markdownIt-Anchor" href="#迭代器"></a> 迭代器</h2><p>指能够被内置函数<code>next</code>调用并不断返回下一个值，直到最后抛出<code>StopIteration</code>错误表示无法继续返回下一个值的对象称为迭代器(<code>Iterator</code>)</p><p>相关链接：[Python内置类型(5)–迭代器类型](<a href="https://www.cnblogs.com/sesshoumaru/p/python-iterator.html#:~:text=Python%E5%86%85%E7%BD%AE%E7%B1%BB%E5%9E%8B">https://www.cnblogs.com/sesshoumaru/p/python-iterator.html#:~:text=Python内置类型</a> (5)–迭代器类型. 指能够被内置函数 next 调用并不断返回下一个值，直到最后抛出 StopIteration 错误表示无法继续返回下一个值的对象称为迭代器,( Iterator) 其实以上的说法只是侠义上的迭代器的定义，在python中，迭代器还需要实现可迭代接口 ( Iterable )，可迭代接口需要返回的是一个迭代器对象，这样迭代器就能够被 for 语句进行迭代。.)</p><p><strong>可以理解成一个指针</strong></p><p>另外，<code>for</code>循环每执行一次即相当于调用了一次<code>next(iterator)</code>方法，直到捕获到<code>StopIteration</code>异常退出循环。</p><p>写程序理解：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> itertools<br>x=<span class="hljs-string">&quot;abcdefg&quot;</span><br>y=itertools.cycle(x)<span class="hljs-comment">#返回的应该是一个迭代器类型的</span><br>i=<span class="hljs-number">1</span><br>ch0=<span class="hljs-built_in">next</span>(y)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;ch0=&quot;</span>,ch0)<br><span class="hljs-keyword">for</span> ch1 <span class="hljs-keyword">in</span> y:<br>    i+=<span class="hljs-number">1</span><br>    <span class="hljs-keyword">if</span> i&gt;<span class="hljs-number">10</span>:<br>        <span class="hljs-keyword">break</span><br>    <span class="hljs-built_in">print</span>(ch1,end=<span class="hljs-string">&#x27; &#x27;</span>)<span class="hljs-comment">#跳出时，i==11,ch1==d</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;\n——————&quot;</span>)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>):<br>    ch2=<span class="hljs-built_in">next</span>(y)<br>    <span class="hljs-built_in">print</span>(ch2,end=<span class="hljs-string">&#x27; &#x27;</span>)<br>  <br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">输出：</span><br><span class="hljs-string">ch0= a</span><br><span class="hljs-string">b c d e f g a b c</span><br><span class="hljs-string">——————</span><br><span class="hljs-string">e f g a b c d e f g</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br></code></pre></td></tr></table></figure><p>由以上可以发现，用了next(y)可以这样理解：next是在调用的时候才往下跳，取一个新的值。最初始在第一个值之前，当第一次调用了next的时候就跳到第一个值。next或者for（本质也是next）移动取值了之后的效果是保存的，就像指针移动了之后指向的是操作后的地方。如例子中ch0读了y的第一个值a后，ch1就是从第二个值b开始读了</p><h3 id="创建可迭代对象iter函数"><a class="markdownIt-Anchor" href="#创建可迭代对象iter函数"></a> 创建可迭代对象：iter()函数</h3><p>相关链接：<a href="https://blog.csdn.net/weixin_38705903/article/details/102870485">【Python】iter()用途及如何创建一个可迭代的对象_</a></p><p>（注意上面链接关于类型的判断）</p><hr /><h2 id="对字符串"><a class="markdownIt-Anchor" href="#对字符串"></a> 对字符串</h2><h3 id="find"><a class="markdownIt-Anchor" href="#find"></a> find()</h3><p>检测字符串中是否包含子字符串 str ，如果指定 beg（开始） 和 end（结束） 范围，则检查是否包含在指定范围内，如果包含子字符串返回开始的索引值，否则返回-1。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">str</span>.find(<span class="hljs-built_in">str</span>, beg=<span class="hljs-number">0</span>, end=<span class="hljs-built_in">len</span>(string))<br><span class="hljs-comment">#str -- 指定检索的字符串</span><br><span class="hljs-comment">#beg -- 开始索引，默认为0。</span><br><span class="hljs-comment">#end -- 结束索引，默认为字符串的长度。</span><br><br>a=<span class="hljs-string">&#x27;hello,world.&#x27;</span><br><span class="hljs-built_in">print</span> a.find(<span class="hljs-string">&quot;o,&quot;</span>)<br><span class="hljs-comment">#输出：4</span><br><br><span class="hljs-comment">#单纯判断有没有可以不用函数，比如：</span><br>b=<span class="hljs-string">&#x27;abcde&#x27;</span><br><span class="hljs-string">&#x27;ab&#x27;</span> <span class="hljs-keyword">in</span> b<br><span class="hljs-comment">#输出：True</span><br></code></pre></td></tr></table></figure><h3 id="join"><a class="markdownIt-Anchor" href="#join"></a> join()</h3><p>用于将序列中的元素以指定的字符连接生成一个新的字符串。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">str</span> = <span class="hljs-string">&quot;-&quot;</span>;<br>seq = (<span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-string">&quot;b&quot;</span>, <span class="hljs-string">&quot;c&quot;</span>)<span class="hljs-comment"># 字符串序列</span><br><span class="hljs-built_in">print</span> <span class="hljs-built_in">str</span>.join( seq )<br><span class="hljs-comment">#输出是a-b-c</span><br><br><span class="hljs-built_in">eval</span>(<span class="hljs-string">&#x27;*&#x27;</span>.join(<span class="hljs-built_in">map</span>(<span class="hljs-built_in">str</span>,<span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">6</span>))))<span class="hljs-comment">#输出5的阶乘</span><br></code></pre></td></tr></table></figure><h3 id="count"><a class="markdownIt-Anchor" href="#count"></a> count()</h3><p>用于统计字符串里某个字符或子字符串出现的次数。可选参数为在字符串搜索的开始与结束位置。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">str</span>.count(sub, start= <span class="hljs-number">0</span>,end=<span class="hljs-built_in">len</span>(string))<br></code></pre></td></tr></table></figure><ul><li>sub – 搜索的子字符串</li><li>start – 字符串开始搜索的位置。默认为第一个字符,第一个字符索引值为0。</li><li>end – 字符串中结束搜索的位置。字符中第一个字符的索引为 0。默认为字符串的最后一个位置。</li></ul><h3 id="swapcase"><a class="markdownIt-Anchor" href="#swapcase"></a> swapcase()</h3><p>将字符串大小写互换</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">str</span>.swapcase()<br></code></pre></td></tr></table></figure><h3 id="replace"><a class="markdownIt-Anchor" href="#replace"></a> replace()</h3><p>把字符串中的 old（旧字符串） 替换成 new(新字符串)，如果指定第三个参数max，则替换不超过 max 次。</p><p>(注意，更改的不是原字符串，而是str指向的内容，字符串是不可更改的)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">str</span> = <span class="hljs-string">&quot;this is string example....wow!!! this is really string&quot;</span>;<br><span class="hljs-built_in">print</span> <span class="hljs-built_in">str</span>.replace(<span class="hljs-string">&quot;is&quot;</span>, <span class="hljs-string">&quot;was&quot;</span>);<br><span class="hljs-built_in">print</span> <span class="hljs-built_in">str</span>.replace(<span class="hljs-string">&quot;is&quot;</span>, <span class="hljs-string">&quot;was&quot;</span>, <span class="hljs-number">3</span>);<br><br><span class="hljs-comment">#输出：</span><br><span class="hljs-comment">#thwas was string example....wow!!! thwas was really string</span><br><span class="hljs-comment">#thwas was string example....wow!!! thwas is really string</span><br></code></pre></td></tr></table></figure><h3 id="endswith"><a class="markdownIt-Anchor" href="#endswith"></a> endswith()</h3><p>用于判断字符串是否以指定后缀结尾，如果以指定后缀结尾返回True，否则返回False。可选参数&quot;start&quot;与&quot;end&quot;为检索字符串的开始与结束位置。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">str</span>.endswith(suffix[, start[, end]])<br></code></pre></td></tr></table></figure><ul><li>suffix – 该参数可以是一个字符串或者是一个元素。</li><li>start – 字符串中的开始位置。</li><li>end – 字符中结束位置。</li></ul><p>可用于<strong>判断文件名后缀</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">fileName=<span class="hljs-string">&#x27;hello.jpg&#x27;</span><br>fileEnd=<span class="hljs-string">&#x27;jpg&#x27;</span><br><span class="hljs-built_in">print</span>(fileName.endswith(fileEnd))<br><span class="hljs-comment">#True</span><br></code></pre></td></tr></table></figure><p>相对应的是startswith()</p><h3 id="resplit"><a class="markdownIt-Anchor" href="#resplit"></a> re.split()</h3><p>一次加入多个分割条件</p><p>形式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> re<br>re.split(pattern, string[, maxsplit=<span class="hljs-number">0</span>, flags=<span class="hljs-number">0</span>])<br></code></pre></td></tr></table></figure><p>pattern:匹配的字符串(可使用正则表达式）<br />string:需要切分的字符串<br />maxsplit:分隔次数，默认为0(即不限次数)<br />flags:标志位，用于控制正则表达式的匹配方式，比如：是否区分大小写</p><p><strong>正则表达式</strong>表见链接：<a href="https://blog.csdn.net/qq_31672701/article/details/100711585">正则表达式</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> re<br>s=<span class="hljs-string">&#x27;abc,  abc,  defg,  dds&#x27;</span><br>re.split(<span class="hljs-string">&#x27;\W+&#x27;</span>,s) <span class="hljs-comment"># \W匹配任何非单词字符</span><br><span class="hljs-comment">#结果：[&#x27;abc&#x27;, &#x27;abc&#x27;, &#x27;defg&#x27;, &#x27;dds&#x27;]</span><br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> re<br>s=<span class="hljs-string">&#x27;abc,  abc,  defg,  dds&#x27;</span><br>re.split(<span class="hljs-string">&#x27;(\W+)&#x27;</span>,s) <span class="hljs-comment"># 如果加上了括号，返回值会包括剔除的部分</span><br><span class="hljs-comment">#结果：[&#x27;abc&#x27;, &#x27;,  &#x27;, &#x27;abc&#x27;, &#x27;,  &#x27;, &#x27;defg&#x27;, &#x27;,  &#x27;, &#x27;dds&#x27;]</span><br></code></pre></td></tr></table></figure><h3 id="isdigit"><a class="markdownIt-Anchor" href="#isdigit"></a> isdigit()</h3><p>判断一个字符串是否只含有数字/一个字符是否为数字,是则返回True，不是则返回False</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">password=<span class="hljs-string">&#x27;hello1234HHH&#x27;</span><br><span class="hljs-keyword">for</span> ch <span class="hljs-keyword">in</span> password: <span class="hljs-comment">#这样就可以用每个字母了</span><br>    <span class="hljs-keyword">if</span> ch.isdigit():<br>        digitN=<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>同类的还有：**isupper()**判断是否是大写，**islower()**判断是否是小写</p><hr /><h2 id="运算"><a class="markdownIt-Anchor" href="#运算"></a> 运算</h2><h3 id="mathsqrt"><a class="markdownIt-Anchor" href="#mathsqrt"></a> math.sqrt()</h3><p>其实就是开根号，但是要import math，并且使用的时候不能单独一个sqrt</p><h3 id="reduce"><a class="markdownIt-Anchor" href="#reduce"></a> reduce()</h3><p>对参数序列中元素进行累积。</p><p>函数将一个数据集合（链表，元组等）中的所有数据进行下列操作：用传给 reduce 中的<strong>函数 <strong>function（有两个参数）先对集合中的第 1、2 个元素</strong>进行操作</strong>，得到的结果再与第三个数据用 function 函数运算，最后得到一个结果。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> functools <span class="hljs-keyword">import</span> reduce <span class="hljs-comment">#需要导入模块functools</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">x, y</span>) :            <span class="hljs-comment"># 两数相加</span><br>    <span class="hljs-keyword">return</span> x + y<br>sum1 = reduce(add, [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>])   <span class="hljs-comment"># 计算列表和：1+2+3+4+5</span><br>sum2 = reduce(<span class="hljs-keyword">lambda</span> x, y: x+y, [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>])  <span class="hljs-comment"># 使用 lambda 匿名函数</span><br><span class="hljs-built_in">print</span>(sum1)<br><span class="hljs-built_in">print</span>(sum2)<br><span class="hljs-comment">#结果：15\n15</span><br></code></pre></td></tr></table></figure><h3 id="cmp"><a class="markdownIt-Anchor" href="#cmp"></a> cmp()</h3><p>cmp(x,y) 函数用于比较2个对象，如果 x &lt; y 返回 -1, 如果 x == y 返回 0, 如果 x &gt; y 返回 1。</p><h3 id="lambda"><a class="markdownIt-Anchor" href="#lambda"></a> lambda()</h3><p>有点像#define一个格式的感觉</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">lambda</span> arguments : expression<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">x = <span class="hljs-keyword">lambda</span> a : a + <span class="hljs-number">10</span><br><span class="hljs-built_in">print</span>(x(<span class="hljs-number">7</span>))<br><span class="hljs-comment"># 17</span><br></code></pre></td></tr></table></figure><hr /><h2 id="其他函数"><a class="markdownIt-Anchor" href="#其他函数"></a> 其他函数</h2><h3 id="isintance"><a class="markdownIt-Anchor" href="#isintance"></a> isintance()</h3><p>isinstance() 函数来判断一个对象是否是一个已知的类型，类似 <strong>type()</strong>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">isinstance</span>(<span class="hljs-built_in">object</span>, classinfo)<br></code></pre></td></tr></table></figure><ul><li>object – 实例对象。</li><li>classinfo – 可以是直接或间接类名、基本类型或者由它们组成的元组。</li></ul><blockquote><p>isinstance() 与 type() 区别：</p><ul><li><p>type() 不会认为子类是一种父类类型，不考虑继承关系。</p></li><li><p>isinstance() 会认为子类是一种父类类型，考虑继承关系。</p></li></ul><p>如果要判断两个类型是否相同推荐使用 isinstance()。</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">A</span>:<br>    <span class="hljs-keyword">pass</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">B</span>(<span class="hljs-title class_ inherited__">A</span>):<br>    <span class="hljs-keyword">pass</span><br><span class="hljs-built_in">isinstance</span>(A(), A)    <span class="hljs-comment"># returns True</span><br><span class="hljs-built_in">type</span>(A()) == A        <span class="hljs-comment"># returns True</span><br><span class="hljs-built_in">isinstance</span>(B(), A)    <span class="hljs-comment"># returns True</span><br><span class="hljs-built_in">type</span>(B()) == A        <span class="hljs-comment"># returns Fals</span><br></code></pre></td></tr></table></figure><h3 id="bool"><a class="markdownIt-Anchor" href="#bool"></a> bool()</h3><p>bool()函数用于将给定参数转换为布尔类型，如果没有参数，返回 False。</p><p>bool 是 int 的子类。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">print</span>(<span class="hljs-built_in">bool</span>(<span class="hljs-number">1</span>))<br><span class="hljs-comment">#True</span><br></code></pre></td></tr></table></figure><p>扩展：<strong>布尔类型</strong></p><p>Python 中布尔值使用常量 True 和 False 来表示。</p><p>1、在数值上下文环境中，True被当作 1，False 被当作0</p><p>2、其他类型值转换 bool 值时除了 ‘’、&quot;&quot;、’’’’’’、&quot;&quot;&quot;&quot;&quot;&quot;、0、()、[]、{}、None、0.0、0L、0.0+0.0j、False*为 False外，其他都为 True</p>]]></content>
    
    
    
    <tags>
      
      <tag>python</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
